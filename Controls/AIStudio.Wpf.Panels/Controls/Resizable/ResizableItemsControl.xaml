<ResourceDictionary
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:panels="clr-namespace:AIStudio.Wpf.Panels"
     xmlns:controls="clr-namespace:AIStudio.Wpf.Panels.Controls"
     xmlns:converter="clr-namespace:AIStudio.Wpf.Panels.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/AIStudio.Wpf.Panels;component/Controls/Button/WindowButton.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <converter:TileStateToToggleVisibilityConverter x:Key="TileStateToToggleVisibilityConverter"/>

    <Style x:Key="DragGripperStyle_V" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DragGripperStyle_H" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TumblrStyle" TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{StaticResource ToolTipBackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ToolTipBackgroundBorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0.7" CenterX="90" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="ToolTip.Opened">
                <BeginStoryboard HandoffBehavior="Compose">
                    <Storyboard TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" RenderOptions.BitmapScalingMode="HighQuality" >
                        <DoubleAnimation From="0.7" To="1" Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="ResizableItemItemContainerBindingWidthAndHeightStyle" TargetType="{x:Type panels:ResizableItem}" >
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="{Binding Width}"/>
        <Setter Property="Height" Value="{Binding Height}"/>
        <Setter Property="panels:TilePanel.WidthPix" Value="{Binding WidthPix}"/>
        <Setter Property="panels:TilePanel.HeightPix" Value="{Binding HeightPix}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type panels:ResizableItem}">
                    <Grid x:Name="PART_RootGrid">
                        <!-- Content area-->
                        <Border x:Name="Bd" Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <Thumb x:Name="PART_DragThumb_V" Grid.RowSpan="2" Style="{StaticResource DragGripperStyle_V}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" />
                        <Thumb x:Name="PART_DragThumb_H" Grid.RowSpan="2" Style="{StaticResource DragGripperStyle_H}" HorizontalAlignment="Right" VerticalAlignment="Stretch" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ResizableItemContainerStyle" TargetType="{x:Type panels:ResizableItem}" >
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="panels:TilePanel.WidthPix" Value="{Binding WidthPix}"/>
        <Setter Property="panels:TilePanel.HeightPix" Value="{Binding HeightPix}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type panels:ResizableItem}">
                    <Grid x:Name="PART_RootGrid">
                        <!-- Content area-->
                        <Border x:Name="Bd" Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <Thumb x:Name="PART_DragThumb_V" Grid.RowSpan="2" Style="{StaticResource DragGripperStyle_V}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" />
                        <Thumb x:Name="PART_DragThumb_H" Grid.RowSpan="2" Style="{StaticResource DragGripperStyle_H}" HorizontalAlignment="Right" VerticalAlignment="Stretch" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="TitleTemplate"
                  x:Shared="False">
        <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Text="{Binding Title, RelativeSource={RelativeSource AncestorType={x:Type panels:MDIItem}}}" Margin="2,2" IsHitTestVisible="False" />
    </DataTemplate>

    <Style x:Key="TitleItemItemContainerBindingWidthAndHeightStyle" TargetType="{x:Type panels:MDIItem}" >
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="{Binding Width}"/>
        <Setter Property="Height" Value="{Binding Height}"/>
        <Setter Property="panels:TilePanel.WidthPix" Value="{Binding WidthPix}"/>
        <Setter Property="panels:TilePanel.HeightPix" Value="{Binding HeightPix}"/>
        <Setter Property="TileState" Value="{Binding TileState}"/>
        <Setter Property="Title" Value="{Binding Title}"/>
        <Setter Property="CanClose" Value="{Binding CanClose}"/>
        <Setter Property="TitleTemplate" Value="{Binding TitleTemplate, RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type panels:MDIItem}">
                    <Border x:Name="PART_Border" CornerRadius="0" BorderBrush="{StaticResource InactiveWindowColor}" BorderThickness="1">
                        <Grid Background="{TemplateBinding Background}" x:Name="PART_RootGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!-- Header area-->
                            <Border x:Name="PART_Header" Background="{StaticResource InactiveWindowColor}" Height="24" VerticalAlignment="Top" 
                                    ToolTipService.IsEnabled="False" ToolTipService.Placement="Top" ToolTipService.HasDropShadow="False">
                                <DockPanel>
                                    <StackPanel x:Name="PART_ButtonBar" DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right" Margin="2,2,2,2" VerticalAlignment="Center">
                                        <controls:WindowButton x:Name="PART_ButtonBar_MinimizeButton" Icon="{StaticResource MinimizeShape}" Visibility="{Binding TileState, Converter={StaticResource TileStateToToggleVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <controls:WindowButton x:Name="PART_ButtonBar_MaximizeButton" Icon="{StaticResource MaximizeShape}" />
                                        <controls:WindowButton x:Name="PART_ButtonBar_CloseButton" Icon="{StaticResource CloseShape}" IsEnabled="{TemplateBinding IsCloseButtonEnabled}" />
                                    </StackPanel>
                                    <ContentPresenter x:Name="PART_Title" DockPanel.Dock="Left" VerticalAlignment="Center" ContentTemplate="{TemplateBinding TitleTemplate}" />
                                </DockPanel>
                                <Border.ToolTip>
                                    <ToolTip Style="{StaticResource TumblrStyle}">
                                        <Viewbox Width="180" Height="180" RenderOptions.BitmapScalingMode="HighQuality" Panel.ZIndex="100">
                                            <Image x:Name="PART_Tumblr" Stretch="UniformToFill" />
                                        </Viewbox>
                                    </ToolTip>
                                </Border.ToolTip>
                            </Border>
                            <!-- Content area-->
                            <Border x:Name="PART_BorderContent" Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <Thumb x:Name="PART_DragThumb_V" Grid.RowSpan="2" Style="{StaticResource DragGripperStyle_V}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" />
                            <Thumb x:Name="PART_DragThumb_H" Grid.RowSpan="2" Style="{StaticResource DragGripperStyle_H}" HorizontalAlignment="Right" VerticalAlignment="Stretch" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Header" Property="Background" Value="{StaticResource ActiveWindowColor}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource ActiveWindowColor}" />
                        </Trigger>
                        <Trigger Property="TileState" Value="Maximized">
                            <Setter TargetName="PART_ButtonBar_MaximizeButton" Property="Icon" Value="{StaticResource NormalizeShape}" />
                            <Setter TargetName="PART_Border" Property="CornerRadius" Value="0" />
                            <Setter TargetName="PART_BorderContent" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="TileState" Value="Minimized">
                            <Setter TargetName="PART_DragThumb_V" Property="IsEnabled" Value="False" />
                            <Setter TargetName="PART_DragThumb_H" Property="IsEnabled" Value="False" />
                            <Setter TargetName="PART_Header" Property="ToolTipService.IsEnabled" Value="True" />
                            <Setter TargetName="PART_ButtonBar_MinimizeButton" Property="Icon" Value="{StaticResource ExpanderShape}" />
                        </Trigger>
                        <Trigger Property="CanClose" Value="false">
                            <Setter TargetName="PART_ButtonBar_CloseButton" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleItemContainerStyle" TargetType="{x:Type panels:MDIItem}" >
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="panels:TilePanel.WidthPix" Value="{Binding WidthPix}"/>
        <Setter Property="panels:TilePanel.HeightPix" Value="{Binding HeightPix}"/>
        <Setter Property="TileState" Value="{Binding TileState}"/>
        <Setter Property="Title" Value="{Binding Title}"/>
        <Setter Property="CanClose" Value="{Binding CanClose}"/>
        <Setter Property="TitleTemplate" Value="{Binding TitleTemplate, RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type panels:MDIItem}">
                    <Border x:Name="PART_Border" CornerRadius="0" BorderBrush="{StaticResource InactiveWindowColor}" BorderThickness="1">
                        <Grid Background="{TemplateBinding Background}" x:Name="PART_RootGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!-- Header area-->
                            <Border x:Name="PART_Header" Background="{StaticResource InactiveWindowColor}" Height="24" VerticalAlignment="Top" 
                                    ToolTipService.IsEnabled="False" ToolTipService.Placement="Top" ToolTipService.HasDropShadow="False">
                                <DockPanel>
                                    <StackPanel x:Name="PART_ButtonBar" DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right" Margin="2,2,2,2" VerticalAlignment="Center">
                                        <controls:WindowButton x:Name="PART_ButtonBar_MinimizeButton" Icon="{StaticResource MinimizeShape}" Visibility="{Binding TileState, Converter={StaticResource TileStateToToggleVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <controls:WindowButton x:Name="PART_ButtonBar_MaximizeButton" Icon="{StaticResource MaximizeShape}" />
                                        <controls:WindowButton x:Name="PART_ButtonBar_CloseButton" Icon="{StaticResource CloseShape}" IsEnabled="{TemplateBinding IsCloseButtonEnabled}" />
                                    </StackPanel>
                                    <ContentPresenter x:Name="PART_Title" DockPanel.Dock="Left" VerticalAlignment="Center" ContentTemplate="{TemplateBinding TitleTemplate}" />
                                </DockPanel>
                                <Border.ToolTip>
                                    <ToolTip Style="{StaticResource TumblrStyle}">
                                        <Viewbox Width="180" Height="180" RenderOptions.BitmapScalingMode="HighQuality" Panel.ZIndex="100">
                                            <Image x:Name="PART_Tumblr" Stretch="UniformToFill" />
                                        </Viewbox>
                                    </ToolTip>
                                </Border.ToolTip>
                            </Border>
                            <!-- Content area-->
                            <Border x:Name="PART_BorderContent" Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <Thumb x:Name="PART_DragThumb_V" Grid.RowSpan="2" Style="{StaticResource DragGripperStyle_V}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" />
                            <Thumb x:Name="PART_DragThumb_H" Grid.RowSpan="2" Style="{StaticResource DragGripperStyle_H}" HorizontalAlignment="Right" VerticalAlignment="Stretch" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Header" Property="Background" Value="{StaticResource ActiveWindowColor}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource ActiveWindowColor}" />
                        </Trigger>
                        <Trigger Property="TileState" Value="Maximized">
                            <Setter TargetName="PART_ButtonBar_MaximizeButton" Property="Icon" Value="{StaticResource NormalizeShape}" />
                            <Setter TargetName="PART_Border" Property="CornerRadius" Value="0" />
                            <Setter TargetName="PART_BorderContent" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="TileState" Value="Minimized">
                            <Setter TargetName="PART_DragThumb_V" Property="IsEnabled" Value="False" />
                            <Setter TargetName="PART_DragThumb_H" Property="IsEnabled" Value="False" />
                            <Setter TargetName="PART_Header" Property="ToolTipService.IsEnabled" Value="True" />
                            <Setter TargetName="PART_ButtonBar_MinimizeButton" Property="Icon" Value="{StaticResource ExpanderShape}" />
                        </Trigger>
                        <Trigger Property="CanClose" Value="false">
                            <Setter TargetName="PART_ButtonBar_CloseButton" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AIStudio.Styles.ResizableItemsControl" TargetType="{x:Type panels:ResizableItemsControl}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="TitleTemplate" Value="{StaticResource TitleTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type panels:ResizableItemsControl}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--布局选择-->
            <!--StackPanel-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanelType" Value="StackPanel" />
                    <Condition Property="Orientation" Value="Horizontal" />
                </MultiTrigger.Conditions>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanelType" Value="StackPanel" />
                    <Condition Property="Orientation" Value="Vertical" />
                </MultiTrigger.Conditions>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <!--WrapPanel-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanelType" Value="WrapPanel" />
                    <Condition Property="Orientation" Value="Horizontal" />
                </MultiTrigger.Conditions>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <WrapPanel 
                                Width="{Binding Path=ActualWidth, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"
                                Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanelType" Value="WrapPanel" />
                    <Condition Property="Orientation" Value="Vertical" />
                </MultiTrigger.Conditions>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <WrapPanel 
                                Height="{Binding Path=ActualHeight, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"
                                Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <!--TilePanel-->
            <Trigger Property="PanelType" Value="TilePanel">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <panels:TilePanel Orientation="{Binding Path=Orientation, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"
                                              TileWidth="{Binding Path=TileWidth, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"
                                              TileHeight="{Binding Path=TileHeight, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"
                                              TileCount="{Binding Path=TileCount, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"
                                              TileMargin="{Binding Path=TileMargin, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanelType" Value="WaterfallPanel" />
                    <Condition Property="Orientation" Value="Horizontal" />
                </MultiTrigger.Conditions>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <panels:WaterfallPanel 
                                Width="{Binding Path=ActualWidth, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"
                                Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <!--WaterfallPanel-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanelType" Value="WaterfallPanel" />
                    <Condition Property="Orientation" Value="Vertical" />
                </MultiTrigger.Conditions>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <panels:WaterfallPanel 
                                Height="{Binding Path=ActualHeight, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"
                                Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <!--WrapPanelFill-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanelType" Value="WrapPanelFill" />
                    <Condition Property="Orientation" Value="Horizontal" />
                </MultiTrigger.Conditions>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <panels:WrapPanelFill 
                                Width="{Binding Path=ActualWidth, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"
                                Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanelType" Value="WrapPanelFill" />
                    <Condition Property="Orientation" Value="Vertical" />
                </MultiTrigger.Conditions>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <panels:WrapPanelFill 
                                Height="{Binding Path=ActualHeight, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"
                                Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <!--MaximizedTile-->
            <Trigger Property="PanelType" Value="MaximizedTilePanel">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <panels:MaximizedTilePanel 
                                Width="{Binding Path=ActualWidth, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"
                                Height="{Binding Path=ActualHeight, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"
                                MaximizedTileLocation="{Binding Path=MaximizedTileLocation,Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"
                                MaximizedRatio="{Binding Path=MaximizedRatio,Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"
                                TileMargin="{Binding Path=TileMargin, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"
                                AutoMaximizedLocation="{Binding Path=ShowTitle, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type panels:ResizableItemsControl}}}"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!--ItemContainerStyle-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="BindingWidthAndHeight" Value="False" />
                    <Condition Property="ShowTitle" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="ItemContainerStyle" Value="{StaticResource ResizableItemContainerStyle}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="BindingWidthAndHeight" Value="True" />
                    <Condition Property="ShowTitle" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="ItemContainerStyle" Value="{StaticResource ResizableItemItemContainerBindingWidthAndHeightStyle}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="BindingWidthAndHeight" Value="False" />
                    <Condition Property="ShowTitle" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ItemContainerStyle" Value="{StaticResource TitleItemContainerStyle}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="BindingWidthAndHeight" Value="True" />
                    <Condition Property="ShowTitle" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ItemContainerStyle" Value="{StaticResource TitleItemItemContainerBindingWidthAndHeightStyle}"/>
            </MultiTrigger>

        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource AIStudio.Styles.ResizableItemsControl}" TargetType="{x:Type panels:ResizableItemsControl}"/>

</ResourceDictionary>
