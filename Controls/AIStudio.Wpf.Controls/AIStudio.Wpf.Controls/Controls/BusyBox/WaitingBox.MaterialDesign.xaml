<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                    
                    xmlns:controls="clr-namespace:AIStudio.Wpf.Controls"
                    xmlns:converter="clr-namespace:AIStudio.Wpf.Controls.Converter">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Themes/Geometries.xaml" />
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Themes/Shadows.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="AIStudio.Styles.WaitingBox" TargetType="{x:Type controls:WaitingBox}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
        <Setter Property="controls:ControlAttach.CornerRadius" Value="{DynamicResource DefaultCornerRadius}" />
        <Setter Property="FontSize" Value="{DynamicResource AIStudio.Title.Size}"/>
        <Setter Property="FontFamily" Value="{DynamicResource AIStudio.Font.FontFamily}"/>
        <Setter Property="controls:IconAttach.Width" Value="{DynamicResource AIStudio.Icon.Size.ExtraLarge}"/>
        <Setter Property="controls:IconAttach.Height" Value="{DynamicResource AIStudio.Icon.Size.ExtraLarge}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:WaitingBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Border Background="{TemplateBinding Background}" Opacity="0.89" CornerRadius="1" Effect="{DynamicResource DropShadowBrush}"></Border>
                        <StackPanel VerticalAlignment="Center"  Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
                            <Path Data="{StaticResource LoadingGeometry}" Fill="{TemplateBinding Foreground}" Width="{TemplateBinding controls:IconAttach.Width}" Height="{TemplateBinding controls:IconAttach.Height}" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <RotateTransform x:Name="TransIcon" Angle="0"/>
                                </Path.RenderTransform>
                            </Path>
                            <TextBlock x:Name="txtMessage" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Text}" VerticalAlignment="Center" TextWrapping="Wrap"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Window.Loaded">
                            <BeginStoryboard >
                                <Storyboard >
                                    <DoubleAnimation RepeatBehavior="Forever" Storyboard.TargetName="TransIcon" 
                                     Storyboard.TargetProperty="Angle" To="360" Duration="0:0:2.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightBrush}"/>
                <Setter Property="Background" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
                <Setter Property="Background" Value="{DynamicResource SecondaryHueMidForegroundBrush}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}"/>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="Foreground" Value="{DynamicResource InfoBrush}"/>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="Foreground" Value="{DynamicResource WarningBrush}"/>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="Foreground" Value="{DynamicResource DangerBrush}"/>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type controls:WaitingBox}" BasedOn="{StaticResource AIStudio.Styles.WaitingBox}" />
</ResourceDictionary>
