<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:AIStudio.Wpf.Controls"
                    xmlns:converter="clr-namespace:AIStudio.Wpf.Controls.Converter">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converter:HalfConverter x:Key="HalfConverter" />
    <converter:BrushToColorConverter x:Key="BrushToColorConverter" />


    <SineEase EasingMode="EaseOut" x:Key="BadgeEase" />
    <Storyboard x:Key="BadgeChangedStoryboard">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
            <EasingDoubleKeyFrame KeyTime="0" Value="1.4" />
            <EasingDoubleKeyFrame EasingFunction="{StaticResource BadgeEase}" KeyTime="0:0:0.3" Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
            <EasingDoubleKeyFrame KeyTime="0" Value="1.4" />
            <EasingDoubleKeyFrame EasingFunction="{StaticResource BadgeEase}" KeyTime="0:0:0.3" Value="1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Style x:Key="AIStudio.Styles.Badged" TargetType="{x:Type controls:Badged}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="BadgeBackground" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="BadgeForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="BadgePlacementMode" Value="TopRight" />
        <Setter Property="BadgeChangedStoryboard" Value="{StaticResource BadgeChangedStoryboard}" />
        <Setter Property="controls:IconAttach.Width" Value="{DynamicResource AIStudio.Badged.Size}"/>
        <Setter Property="controls:IconAttach.Height" Value="{DynamicResource AIStudio.Badged.Size}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Badged}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Grid >
                            <Border x:Name="PART_BadgeContainer" 
                                Background="{TemplateBinding BadgeBackground}"   
                                BorderBrush="{TemplateBinding BadgeBorderBrush}"
                                BorderThickness="{TemplateBinding BadgeBorderThickness}"
                                Padding="{TemplateBinding BadgePadding}"
                                MinWidth="{TemplateBinding controls:IconAttach.Width}" 
                                MinHeight="{TemplateBinding controls:IconAttach.Width}" 
                                controls:BorderAttach.Circular="True"
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Top" 
                                TextElement.FontSize="{TemplateBinding FontSize}"                                
                                RenderTransformOrigin=".5,.5">
                                <Border.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Border.RenderTransform>
                                <Grid>
                                    <ContentControl x:Name="content" 
                                            Foreground="{TemplateBinding BadgeForeground}"
                                            IsTabStop="False"
                                            Focusable="False"
                                            HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding Badge}" />
                                    <Border x:Name="dotBorder" Width="8" Height="8" CornerRadius="4" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"/>
                                    <Rectangle x:Name="PART_RectWave"
                                               Visibility="Collapsed"
                                               RadiusX="{Binding ActualWidth,ElementName=PART_BadgeContainer,Converter={StaticResource HalfConverter}}"
                                               RadiusY="{Binding ActualHeight,ElementName=PART_BadgeContainer,Converter={StaticResource HalfConverter}}"
                                               RenderTransformOrigin="0.5,0.5">
                                        <Rectangle.RenderTransform>
                                            <ScaleTransform x:Name="PART_ScaleWave"
                                                ScaleX="0.4"
                                                ScaleY="0.4" />
                                        </Rectangle.RenderTransform>
                                        <Rectangle.Fill>
                                            <RadialGradientBrush>
                                                <GradientStop Color="{Binding Background,ElementName=PART_BadgeContainer,Converter={StaticResource BrushToColorConverter}}"
                                                    Offset="1" />
                                                <GradientStop Color="Transparent"
                                                    Offset="0" />
                                            </RadialGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>
                            </Border>

                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BadgePlacementMode" Value="TopLeft">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="Top">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="TopRight">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="Right">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Center" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="BottomRight">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="Bottom">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="BottomLeft">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="Left">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Center" />
                        </Trigger>
                        <Trigger Property="IsBadgeSet" Value="false">
                            <Setter TargetName="PART_BadgeContainer" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsDot" Value="true">
                            <Setter TargetName="PART_BadgeContainer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_BadgeContainer" Property="MinWidth" Value="8"/>
                            <Setter TargetName="PART_BadgeContainer" Property="MinHeight" Value="8"/>
                            <Setter TargetName="PART_BadgeContainer" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="PART_BadgeContainer" Property="Padding" Value="0" />
                            <Setter TargetName="dotBorder" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="False">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Center" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Status" Value="Light">
                <Setter Property="BadgeBackground" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="BadgeForeground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
            </Trigger>
            <Trigger Property="Status" Value="Mid">
                <Setter Property="BadgeBackground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="BadgeForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="Status" Value="Dark">
                <Setter Property="BadgeBackground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="BadgeForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="Status" Value="Secondary">
                <Setter Property="BadgeBackground" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="BadgeForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="Status" Value="Success">
                <Setter Property="BadgeBackground" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="BadgeForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="Status" Value="Info">
                <Setter Property="BadgeBackground" Value="{DynamicResource InfoBrush}" />
                <Setter Property="BadgeForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="Status" Value="Warning">
                <Setter Property="BadgeBackground" Value="{DynamicResource WarningBrush}" />
                <Setter Property="BadgeForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="Status" Value="Danger">
                <Setter Property="BadgeBackground" Value="{DynamicResource DangerBrush}" />
                <Setter Property="BadgeForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="Status" Value="Plain">
                <Setter Property="BadgeBackground" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                <Setter Property="BadgeForeground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type controls:Badged}" BasedOn="{StaticResource AIStudio.Styles.Badged}" />
</ResourceDictionary>