<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:AIStudio.Wpf.Controls"
                    xmlns:converter="clr-namespace:AIStudio.Wpf.Controls.Converter"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Themes/Shadows.xaml" />
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Themes/Geometries.xaml" />
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Controls/Base/BreathLamp.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Controls/Icon/Icon.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MahApps/ProgressBar.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converter:ShadowConverter x:Key="ShadowConverter"/>
    <converter:BrushOpacityConverter x:Key="BrushOpacityConverter"/>
    <converter:BorderClipConverter x:Key="BorderClipConverter"/>
    <converter:NullableToBoolConverter x:Key="NullableToBoolConverter"/>

    <DrawingBrush x:Key="DashBorderBrush" Viewport="0,0,8,8" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{DynamicResource MahApps.Brushes.ThemeForeground}">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,50,50" />
                            <RectangleGeometry Rect="50,50,50,50" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="DashMouseOverBorderBrush" Viewport="0,0,8,8" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{DynamicResource MahApps.Brushes.Accent}">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,50,50" />
                            <RectangleGeometry Rect="50,50,50,50" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <Style x:Key="AIStudio.Styles.Button" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="controls:ControlAttach.CornerRadius" Value="{DynamicResource DefaultCornerRadius}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="controls:IconAttach.Width" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="controls:IconAttach.Height" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="controls:ShadowAttach.DropShadowEffect" Value="{StaticResource ShadowDepth1}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <!--<AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(controls:ShadowAttach.CacheMode)}">-->
                        <Border x:Name="border" 
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}" 
                                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(controls:ControlAttach.CornerRadius)}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ShadowAttach.DropShadowEffect),Converter={StaticResource ShadowConverter}}"/>
                        <!--</AdornerDecorator>-->

                        <!--附加内容区域-->
                        <Grid x:Name="PART_AttachContent">
                            <ContentControl Template="{TemplateBinding controls:ControlAttach.AttachContent}" IsTabStop="False" />
                        </Grid>

                        <controls:Ripple Focusable="False" 
                                         Padding="{TemplateBinding Padding}" 
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <controls:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </controls:Ripple.Clip>
                            <Grid>
                                <!--Text-->
                                <DockPanel>
                                    <ContentControl x:Name="PART_IconContent" 
                                                    DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" 
                                                    Template="{TemplateBinding controls:ControlAttach.IconContent}" 
                                                    IsTabStop="False" />
                                    <Grid x:Name="padding" DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" Margin="5,0,0,0"></Grid>
                                    <ContentPresenter x:Name="content" 
                                                    RecognizesAccessKey="True" />
                                </DockPanel>
                            </Grid>
                        </controls:Ripple>
                    </Grid>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(controls:ControlAttach.IconContent), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </DataTrigger>
                        <Trigger Property="HasContent" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                        <!--设置鼠标进入时的背景、前景样式-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="controls:ShadowAttach.Darken" Value="True" />
                        </Trigger>
                        <!--鼠标按下时的前景、背景样式-->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="controls:ShadowAttach.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Geometry),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <Path x:Name="icon" 
                                Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                Fill="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                SnapsToDevicePixels="True" 
                                Stretch="Uniform" 
                                RenderTransformOrigin="0.5,0.5"
                                Data="{Binding Path=(controls:IconAttach.Geometry),RelativeSource={RelativeSource AncestorType=ButtonBase}}">
                                <Path.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </Path.RenderTransform>
                            </Path>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Kind),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <controls:PathIcon x:Name="icon"
                                  Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}"                                  
                                  Foreground="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                  SnapsToDevicePixels="True" 
                                  RenderTransformOrigin="0.5,0.5"
                                  Kind="{Binding Path=(controls:IconAttach.Kind),RelativeSource={RelativeSource AncestorType=ButtonBase}}" >
                                <controls:PathIcon.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </controls:PathIcon.RenderTransform>
                            </controls:PathIcon>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Icon),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <controls:Icon x:Name="icon"
                                  Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  FontSize="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Foreground="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                  SnapsToDevicePixels="True" 
                                  RenderTransformOrigin="0.5,0.5"
                                  Kind="{Binding Path=(controls:IconAttach.Icon),RelativeSource={RelativeSource AncestorType=ButtonBase}}" >
                                <controls:Icon.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </controls:Icon.RenderTransform>
                            </controls:Icon>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="Background" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="Background" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="Background" Value="{DynamicResource InfoBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="Background" Value="{DynamicResource WarningBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource WarningBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="Background" Value="{DynamicResource DangerBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8 }"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />        
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.Button.Flat" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="controls:ControlAttach.CornerRadius" Value="{DynamicResource DefaultCornerRadius}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="controls:IconAttach.Width" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="controls:IconAttach.Height" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <!--<AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(controls:ControlAttach.CacheMode)}">-->
                        <Border x:Name="border" 
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}" 
                                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(controls:ControlAttach.CornerRadius)}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ShadowAttach.DropShadowEffect),Converter={StaticResource ShadowConverter}}"/>
                        <!--</AdornerDecorator>-->

                        <!--附加内容区域-->
                        <Grid x:Name="PART_AttachContent">
                            <ContentControl Template="{TemplateBinding controls:ControlAttach.AttachContent}" IsTabStop="False" />
                        </Grid>

                        <controls:Ripple Focusable="False" 
                                         Padding="{TemplateBinding Padding}" 
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <controls:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </controls:Ripple.Clip>
                            <Grid>
                                <!--Text-->
                                <DockPanel>
                                    <ContentControl x:Name="PART_IconContent" 
                                                    DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" 
                                                    Template="{TemplateBinding controls:ControlAttach.IconContent}" 
                                                    IsTabStop="False" />
                                    <Grid x:Name="padding" DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" Margin="5,0,0,0"></Grid>
                                    <ContentPresenter x:Name="content" RecognizesAccessKey="True" />
                                </DockPanel>
                            </Grid>
                        </controls:Ripple>


                    </Grid>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(controls:ControlAttach.IconContent), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </DataTrigger>
                        <Trigger Property="HasContent" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                        <!--设置鼠标进入时的背景、前景样式-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding Foreground,
                                RelativeSource={RelativeSource Mode=TemplatedParent},
                                Converter={StaticResource BrushOpacityConverter},
                                ConverterParameter=0.16}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Geometry),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <Path x:Name="icon" 
                                Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                Fill="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                SnapsToDevicePixels="True" 
                                Stretch="Uniform" 
                                RenderTransformOrigin="0.5,0.5"
                                Data="{Binding Path=(controls:IconAttach.Geometry),RelativeSource={RelativeSource AncestorType=ButtonBase}}">
                                <Path.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </Path.RenderTransform>
                            </Path>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Kind),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <controls:PathIcon x:Name="icon"
                                  Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}"                                  
                                  Foreground="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                  SnapsToDevicePixels="True" 
                                  RenderTransformOrigin="0.5,0.5"
                                  Kind="{Binding Path=(controls:IconAttach.Kind),RelativeSource={RelativeSource AncestorType=ButtonBase}}" >
                                <controls:PathIcon.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </controls:PathIcon.RenderTransform>
                            </controls:PathIcon>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Icon),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <controls:Icon x:Name="icon"
                                  Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  FontSize="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Foreground="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                  SnapsToDevicePixels="True" 
                                  RenderTransformOrigin="0.5,0.5"
                                  Kind="{Binding Path=(controls:IconAttach.Icon),RelativeSource={RelativeSource AncestorType=ButtonBase}}" >
                                <controls:Icon.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </controls:Icon.RenderTransform>
                            </controls:Icon>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent3}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="Foreground" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource Theme.ShowcaseBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource SuccessBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="Foreground" Value="{DynamicResource InfoBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource InfoBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="Foreground" Value="{DynamicResource WarningBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource WarningBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource DangerBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.Button.Outlined" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="controls:ControlAttach.CornerRadius" Value="{DynamicResource DefaultCornerRadius}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="controls:IconAttach.Width" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="controls:IconAttach.Height" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <!--<AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(controls:ControlAttach.CacheMode)}">-->
                        <Border x:Name="border" 
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}" 
                                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(controls:ControlAttach.CornerRadius)}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ShadowAttach.DropShadowEffect),Converter={StaticResource ShadowConverter}}"/>
                        <!--</AdornerDecorator>-->

                        <!--附加内容区域-->
                        <Grid x:Name="PART_AttachContent">
                            <ContentControl Template="{TemplateBinding controls:ControlAttach.AttachContent}" IsTabStop="False" />
                        </Grid>

                        <controls:Ripple Focusable="False" 
                                         Padding="{TemplateBinding Padding}" 
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <controls:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </controls:Ripple.Clip>
                            <Grid>
                                <!--Text-->
                                <DockPanel>
                                    <ContentControl x:Name="PART_IconContent" 
                                                    DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" 
                                                    Template="{TemplateBinding controls:ControlAttach.IconContent}" 
                                                    IsTabStop="False" />
                                    <Grid x:Name="padding" DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" Margin="5,0,0,0"></Grid>
                                    <ContentPresenter x:Name="content" RecognizesAccessKey="True" />
                                </DockPanel>
                            </Grid>
                        </controls:Ripple>
                    </Grid>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(controls:ControlAttach.IconContent), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </DataTrigger>
                        <Trigger Property="HasContent" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                        <!--设置鼠标进入时的背景、前景样式-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding Foreground,
                                RelativeSource={RelativeSource Mode=TemplatedParent},
                                Converter={StaticResource BrushOpacityConverter},
                                ConverterParameter=0.16}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Geometry),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <Path x:Name="icon" 
                                Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                Fill="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                SnapsToDevicePixels="True" 
                                Stretch="Uniform" 
                                RenderTransformOrigin="0.5,0.5"
                                Data="{Binding Path=(controls:IconAttach.Geometry),RelativeSource={RelativeSource AncestorType=ButtonBase}}">
                                <Path.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </Path.RenderTransform>
                            </Path>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Kind),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <controls:PathIcon x:Name="icon"
                                  Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Foreground="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                  SnapsToDevicePixels="True" 
                                  RenderTransformOrigin="0.5,0.5"
                                  Kind="{Binding Path=(controls:IconAttach.Kind),RelativeSource={RelativeSource AncestorType=ButtonBase}}" >
                                <controls:PathIcon.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </controls:PathIcon.RenderTransform>
                            </controls:PathIcon>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Icon),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <controls:Icon x:Name="icon"
                                  Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  FontSize="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Foreground="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                  SnapsToDevicePixels="True" 
                                  RenderTransformOrigin="0.5,0.5"
                                  Kind="{Binding Path=(controls:IconAttach.Icon),RelativeSource={RelativeSource AncestorType=ButtonBase}}" >
                                <controls:Icon.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </controls:Icon.RenderTransform>
                            </controls:Icon>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent3}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="BorderBrush" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource Theme.ShowcaseBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource SuccessBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource InfoBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource InfoBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="BorderBrush" Value="{DynamicResource WarningBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource WarningBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource WarningBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource DangerBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray2}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.Button.Paper" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}"/>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
        <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="controls:ShadowAttach.DropShadowEffect" Value="{StaticResource ShadowDepth1}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="controls:ControlAttach.CornerRadius" Value="{DynamicResource DefaultCornerRadius}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="controls:IconAttach.Width" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="controls:IconAttach.Height" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Grid>
                            <Border Background="{TemplateBinding Background}" 
                                        CornerRadius="{Binding Path=(controls:ControlAttach.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                        Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ShadowAttach.DropShadowEffect),Converter={StaticResource ShadowConverter}}"
                                        x:Name="background" />
                            <Border CornerRadius="{Binding Path=(controls:ControlAttach.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        x:Name="border" />
                        </Grid>
                        <controls:Ripple Focusable="False" 
                                         Padding="{TemplateBinding Padding}" 
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <controls:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </controls:Ripple.Clip>
                            <!--Text-->
                            <DockPanel>
                                <ContentControl x:Name="PART_IconContent" 
                                                    DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" 
                                                    Template="{TemplateBinding controls:ControlAttach.IconContent}" 
                                                    IsTabStop="False" />
                                <Grid x:Name="padding" DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" Margin="5,0,0,0"></Grid>
                                <ContentPresenter x:Name="content" RecognizesAccessKey="True" />
                            </DockPanel>
                        </controls:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(controls:ControlAttach.IconContent), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </DataTrigger>
                        <Trigger Property="HasContent" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="background" Property="controls:ShadowAttach.Darken" Value="True" />
                            <Setter TargetName="border" Property="Background" Value="{Binding BorderBrush,
                                                                                        RelativeSource={RelativeSource Mode=TemplatedParent},
                                                                                        Converter={StaticResource BrushOpacityConverter},
                                                                                        ConverterParameter=0.16}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Geometry),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <Path x:Name="icon" 
                                Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                Fill="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                SnapsToDevicePixels="True" 
                                Stretch="Uniform" 
                                RenderTransformOrigin="0.5,0.5"
                                Data="{Binding Path=(controls:IconAttach.Geometry),RelativeSource={RelativeSource AncestorType=ButtonBase}}">
                                <Path.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </Path.RenderTransform>
                            </Path>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Kind),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <controls:PathIcon x:Name="icon"
                                  Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}"  
                                  Foreground="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                  SnapsToDevicePixels="True" 
                                  RenderTransformOrigin="0.5,0.5"
                                  Kind="{Binding Path=(controls:IconAttach.Kind),RelativeSource={RelativeSource AncestorType=ButtonBase}}" >
                                <controls:PathIcon.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </controls:PathIcon.RenderTransform>
                            </controls:PathIcon>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Icon),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <controls:Icon x:Name="icon"
                                  Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  FontSize="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Foreground="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                  SnapsToDevicePixels="True" 
                                  RenderTransformOrigin="0.5,0.5"
                                  Kind="{Binding Path=(controls:IconAttach.Icon),RelativeSource={RelativeSource AncestorType=ButtonBase}}" >
                                <controls:Icon.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </controls:Icon.RenderTransform>
                            </controls:Icon>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent3}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="BorderBrush" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource Theme.ShowcaseBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource SuccessBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource InfoBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource InfoBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="BorderBrush" Value="{DynamicResource WarningBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource WarningBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource WarningBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource DangerBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray2}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.Button.Dash" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource AIStudio.Styles.Button.Outlined}">
        <Setter Property="BorderBrush" Value="{StaticResource DashBorderBrush}"/>
        <Setter Property="controls:ControlAttach.BorderBrush" Value="{StaticResource DashMouseOverBorderBrush}" />
    </Style>

    <Style x:Key="AIStudio.Styles.Button.Plain" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="controls:ControlAttach.CornerRadius" Value="{DynamicResource DefaultCornerRadius}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="6" />
        <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="controls:IconAttach.Width" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="controls:IconAttach.Height" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <!--<AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(controls:ControlAttach.CacheMode)}">-->
                        <Border x:Name="border" 
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}" 
                                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(controls:ControlAttach.CornerRadius)}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ShadowAttach.DropShadowEffect),Converter={StaticResource ShadowConverter}}"/>
                        <!--</AdornerDecorator>-->

                        <!--附加内容区域-->
                        <Grid x:Name="PART_AttachContent">
                            <ContentControl Template="{TemplateBinding controls:ControlAttach.AttachContent}" IsTabStop="False" />
                        </Grid>

                        <controls:Ripple Focusable="False" 
                                         Padding="{TemplateBinding Padding}" 
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <controls:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </controls:Ripple.Clip>
                            <Grid>
                                <!--Text-->
                                <DockPanel>
                                    <ContentControl x:Name="PART_IconContent" 
                                                    DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" 
                                                    Template="{TemplateBinding controls:ControlAttach.IconContent}" 
                                                    IsTabStop="False" />
                                    <Grid x:Name="padding" DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" Margin="5,0,0,0"></Grid>
                                    <ContentPresenter x:Name="content" RecognizesAccessKey="True" />
                                </DockPanel>
                            </Grid>
                        </controls:Ripple>
                    </Grid>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(controls:ControlAttach.IconContent), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </DataTrigger>
                        <Trigger Property="HasContent" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                        <!--设置鼠标进入时的背景、前景样式-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="content" Value="{Binding Foreground,
                                RelativeSource={RelativeSource Mode=TemplatedParent},
                                Converter={StaticResource BrushOpacityConverter},
                                ConverterParameter=0.6}" />
                            <Setter Property="TextElement.Foreground" TargetName="PART_IconContent" Value="{Binding Foreground,
                                RelativeSource={RelativeSource Mode=TemplatedParent},
                                Converter={StaticResource BrushOpacityConverter},
                                ConverterParameter=0.6}" />
                        </Trigger>
                        <!--鼠标按下时的前景、背景样式-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="content" Value="{Binding Foreground,
                                RelativeSource={RelativeSource Mode=TemplatedParent},
                                Converter={StaticResource BrushOpacityConverter},
                                ConverterParameter=0.8}" />
                            <Setter Property="TextElement.Foreground" TargetName="PART_IconContent" Value="{Binding Foreground,
                                RelativeSource={RelativeSource Mode=TemplatedParent},
                                Converter={StaticResource BrushOpacityConverter},
                                ConverterParameter=0.8}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Geometry),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <Path x:Name="icon" 
                                Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                Fill="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                SnapsToDevicePixels="True" 
                                Stretch="Uniform" 
                                RenderTransformOrigin="0.5,0.5"
                                Data="{Binding Path=(controls:IconAttach.Geometry),RelativeSource={RelativeSource AncestorType=ButtonBase}}">
                                <Path.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </Path.RenderTransform>
                            </Path>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Kind),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <controls:PathIcon x:Name="icon"
                                  Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}"  
                                  Foreground="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                  SnapsToDevicePixels="True" 
                                  RenderTransformOrigin="0.5,0.5"
                                  Kind="{Binding Path=(controls:IconAttach.Kind),RelativeSource={RelativeSource AncestorType=ButtonBase}}" >
                                <controls:PathIcon.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </controls:PathIcon.RenderTransform>
                            </controls:PathIcon>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Icon),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <controls:Icon x:Name="icon"
                                  Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  FontSize="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Foreground="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                  SnapsToDevicePixels="True" 
                                  RenderTransformOrigin="0.5,0.5"
                                  Kind="{Binding Path=(controls:IconAttach.Icon),RelativeSource={RelativeSource AncestorType=ButtonBase}}" >
                                <controls:Icon.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </controls:Icon.RenderTransform>
                            </controls:Icon>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent3}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="Foreground" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource Theme.ShowcaseBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource SuccessBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="Foreground" Value="{DynamicResource InfoBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource InfoBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="Foreground" Value="{DynamicResource WarningBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource WarningBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource DangerBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.Button.Focus" BasedOn="{StaticResource AIStudio.Styles.Button}" TargetType="{x:Type ButtonBase}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="controls:ControlAttach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle x:Name="focus" Margin="2" SnapsToDevicePixels="true" Stroke="{Binding Path=Foreground,RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed"/>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                            <Setter TargetName="focus" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AIStudio.Styles.Button.Loading" BasedOn="{StaticResource AIStudio.Styles.Button}" TargetType="{x:Type ButtonBase}">
        <Setter Property="controls:ButtonAttach.IsIndicatorVisible" Value="True" />
        <Setter Property="controls:ButtonAttach.Opacity" Value="1" />
        <Setter Property="controls:ControlAttach.IconContent">
            <Setter.Value>
                <ControlTemplate>
                    <ProgressBar x:Name="ProgressBar"
                                     Style="{DynamicResource AIStudio.Styles.ProgressBar.Circular}"
                                     Minimum="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.Minimum)}"
                                     Maximum="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.Maximum)}"
                                     Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                     Background="Transparent"
                                     BorderBrush="Transparent"
                                     BorderThickness="2"
                                     Value="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.Value)}"
                                     IsIndeterminate="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.IsIndeterminate)}"
                                     Opacity="{Binding RelativeSource={RelativeSource AncestorType=Button},  Path=(controls:ButtonAttach.Opacity)}"
                                     Visibility="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}}"
                                     Width="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:IconAttach.Width)}"
                                     Height="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:IconAttach.Height)}">
                    </ProgressBar>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    

    <Style x:Key="AIStudio.Styles.Button.Progress" BasedOn="{StaticResource AIStudio.Styles.Button}" TargetType="{x:Type ButtonBase}">
        <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="controls:ButtonAttach.IndicatorBackground" Value="Transparent" />
        <Setter Property="controls:ButtonAttach.IsIndicatorVisible" Value="True" />
        <Setter Property="controls:ButtonAttach.Opacity" Value=".4" />
        <Setter Property="controls:ControlAttach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <ProgressBar x:Name="ProgressBar"
                                             Style="{DynamicResource AIStudio.Styles.ProgressBar}"                                             
                                             Minimum="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.Minimum)}"
                                             Maximum="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.Maximum)}"
                                             Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.IndicatorForeground)}"
                                             Background="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.IndicatorBackground)}"
                                             Value="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.Value)}"
                                             IsIndeterminate="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.IsIndeterminate)}"
                                             Visibility="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}}"
                                             Height="Auto"
                                             Width="Auto"                                             
                                             Opacity="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.Opacity)}" 
                                             controls:ControlAttach.CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ControlAttach.CornerRadius)}">
                        </ProgressBar>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="Background" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="Background" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="Background" Value="{DynamicResource InfoBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="Background" Value="{DynamicResource WarningBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource WarningBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="Background" Value="{DynamicResource DangerBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.Button.Outlined.Progress" BasedOn="{StaticResource AIStudio.Styles.Button.Outlined}" TargetType="{x:Type ButtonBase}">
        <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="controls:ButtonAttach.IndicatorBackground" Value="Transparent" />
        <Setter Property="controls:ButtonAttach.IsIndicatorVisible" Value="True" />
        <Setter Property="controls:ButtonAttach.Opacity" Value=".4" />
        <Setter Property="controls:ControlAttach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <ProgressBar x:Name="ProgressBar"
                                             Style="{DynamicResource AIStudio.Styles.ProgressBar}"                                             
                                             Minimum="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.Minimum)}"
                                             Maximum="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.Maximum)}"
                                             Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.IndicatorForeground)}"
                                             Background="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.IndicatorBackground)}"
                                             Value="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.Value)}"
                                             IsIndeterminate="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.IsIndeterminate)}"
                                             Visibility="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}}"
                                             Height="Auto"
                                             Width="Auto"                                                                          
                                             Opacity="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.Opacity)}" 
                                             controls:ControlAttach.CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ControlAttach.CornerRadius)}">
                        </ProgressBar>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.Accent3}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent}" />
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="BorderBrush" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource Theme.ShowcaseBrush}" />
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource Theme.ShowcaseBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource SuccessBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource InfoBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource InfoBrush}" />
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource InfoBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="BorderBrush" Value="{DynamicResource WarningBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource WarningBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource WarningBrush}" />
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource WarningBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource DangerBrush}" />
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource DangerBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray2}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Gray2}" />
                <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.Button.Circle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="controls:RippleAssist.Feedback" Value="White" />
        <Setter Property="controls:ShadowAttach.DropShadowEffect" Value="{StaticResource ShadowDepth1}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Background}" 
                                 Stroke="{TemplateBinding BorderBrush}" 
                                 StrokeThickness="{TemplateBinding BorderThickness}"
                                 Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ShadowAttach.DropShadowEffect),Converter={StaticResource ShadowConverter}}"
                                 x:Name="border">
                        </Ellipse>

                        <!--附加内容区域-->
                        <Grid x:Name="PART_AttachContent">
                            <ContentControl Template="{TemplateBinding controls:ControlAttach.AttachContent}" IsTabStop="False" />
                        </Grid>

                        <controls:Ripple Focusable="False" 
                                         Padding="{TemplateBinding Padding}" 
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <ContentPresenter x:Name="content" RecognizesAccessKey="True"/>
                            </Grid>
                        </controls:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--设置鼠标进入时的背景、前景样式-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="controls:ShadowAttach.Darken" Value="True" />
                        </Trigger>
                        <!--鼠标按下时的前景、背景样式-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="controls:ShadowAttach.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="controls:IconAttach.Width" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="controls:IconAttach.Height" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Path Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=Button}}" 
                          Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=Button}}" 
                          Fill="{Binding Path=Foreground,RelativeSource={RelativeSource AncestorType=Button}}" 
                          SnapsToDevicePixels="True" 
                          Stretch="Uniform" 
                          Data="{Binding Path=(controls:IconAttach.Geometry),RelativeSource={RelativeSource AncestorType=Button}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="Background" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="Background" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="Background" Value="{DynamicResource InfoBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="Background" Value="{DynamicResource WarningBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource WarningBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="Background" Value="{DynamicResource DangerBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.Button.Circle.Progress" BasedOn="{StaticResource AIStudio.Styles.Button.Circle}" TargetType="{x:Type ButtonBase}">
        <Setter Property="controls:ButtonAttach.IndicatorForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="controls:ButtonAttach.IndicatorBackground" Value="Transparent" />
        <Setter Property="controls:ButtonAttach.IsIndicatorVisible" Value="True" />
        <Setter Property="controls:ButtonAttach.Opacity" Value="0.8" />
        <Setter Property="controls:ControlAttach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <ProgressBar x:Name="ProgressBar"
                                     Style="{DynamicResource AIStudio.Styles.ProgressBar.Circular}"
                                     Minimum="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.Minimum)}"
                                     Maximum="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.Maximum)}"
                                     Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.IndicatorForeground)}"
                                     Background="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.IndicatorBackground)}"
                                     BorderThickness="3"
                                     BorderBrush="Transparent"
                                     Value="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.Value)}"
                                     IsIndeterminate="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.IsIndeterminate)}"
                                     Height="Auto"
                                     Width="Auto"      
                                     Opacity="{Binding RelativeSource={RelativeSource AncestorType=Button},  Path=(controls:ButtonAttach.Opacity)}"
                                     Visibility="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(controls:ButtonAttach.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}}">
                        </ProgressBar>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AIStudio.Styles.Button.Window" TargetType="{x:Type ButtonBase}">
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="controls:IconAttach.Width" Value="{DynamicResource AIStudio.Icon.Size.Medium}"/>
        <Setter Property="controls:IconAttach.Height" Value="{DynamicResource AIStudio.Icon.Size.Medium}"/>
        <Setter Property="controls:ControlAttach.CornerRadius" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{Binding Path=(controls:ControlAttach.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}">
                        <DockPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
                            <ContentControl x:Name="PART_IconContent" 
                                                    DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" 
                                                    Template="{TemplateBinding controls:ControlAttach.IconContent}" 
                                                    IsTabStop="False" />
                            <Grid x:Name="padding" DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" Margin="5,0,0,0"></Grid>
                            <ContentPresenter x:Name="ContentPresenterMain" RecognizesAccessKey="True" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(controls:ControlAttach.IconContent), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_IconContent"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </DataTrigger>
                        <Trigger Property="HasContent" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Geometry),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <Path x:Name="icon" 
                                Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                Fill="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                SnapsToDevicePixels="True" 
                                Stretch="Uniform" 
                                RenderTransformOrigin="0.5,0.5"
                                Data="{Binding Path=(controls:IconAttach.Geometry),RelativeSource={RelativeSource AncestorType=ButtonBase}}">
                                <Path.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </Path.RenderTransform>
                            </Path>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Kind),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <controls:PathIcon x:Name="icon"
                                  Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Foreground="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                  SnapsToDevicePixels="True" 
                                  RenderTransformOrigin="0.5,0.5"
                                  Kind="{Binding Path=(controls:IconAttach.Kind),RelativeSource={RelativeSource AncestorType=ButtonBase}}" >
                                <controls:PathIcon.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </controls:PathIcon.RenderTransform>
                            </controls:PathIcon>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Icon),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <controls:Icon x:Name="icon"
                                  Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  FontSize="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=ButtonBase}}" 
                                  Foreground="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                  SnapsToDevicePixels="True" 
                                  RenderTransformOrigin="0.5,0.5"
                                  Kind="{Binding Path=(controls:IconAttach.Icon),RelativeSource={RelativeSource AncestorType=ButtonBase}}" >
                                <controls:Icon.RenderTransform>
                                    <ScaleTransform x:Name="transIcon"  ScaleX="1" ScaleY="1"/>
                                </controls:Icon.RenderTransform>
                            </controls:Icon>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                        <Condition Binding="{Binding Path=(controls:IconAttach.AllowsAnimation),RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="true"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            
            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="Foreground" Value="{DynamicResource Theme.ShowcaseBrush}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="Foreground" Value="{DynamicResource InfoBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="Foreground" Value="{DynamicResource WarningBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>

            <!--设置鼠标进入时的背景、前景样式-->
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{Binding Foreground,
                                RelativeSource={RelativeSource Mode=Self},
                                Converter={StaticResource BrushOpacityConverter},
                                ConverterParameter=0.16}" />
            </Trigger>
            <!--鼠标按下时的前景、背景样式-->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{Binding Foreground,
                                RelativeSource={RelativeSource Mode=Self},
                                Converter={StaticResource BrushOpacityConverter},
                                ConverterParameter=0.28}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.Button.Clear" BasedOn="{StaticResource AIStudio.Styles.Button.Plain}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="controls:IconAttach.Width" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="controls:IconAttach.Height" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="controls:IconAttach.Geometry" Value="{StaticResource ClearGeometry}"/>
    </Style>

    <Style x:Key="AIStudio.Styles.Button.Window.Close" BasedOn="{StaticResource AIStudio.Styles.Button.Window}" TargetType="{x:Type ButtonBase}">
        <Setter Property="controls:IconAttach.Geometry" Value="{StaticResource CloseGeometry}"/>
        <Style.Triggers>
            <!--设置鼠标进入时的背景、前景样式-->
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="Red" />
            </Trigger>
            <!--鼠标按下时的前景、背景样式-->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkRed" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>