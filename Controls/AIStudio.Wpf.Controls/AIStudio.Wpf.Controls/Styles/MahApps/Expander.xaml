<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:AIStudio.Wpf.Controls"
                    xmlns:converter="clr-namespace:AIStudio.Wpf.Controls.Converter">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Themes/Geometries.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Duration x:Key="ExpandDuration">0:0:0.250</Duration>
    <Duration x:Key="CollapseDuration">0:0:0.200</Duration>

    <KeyTime x:Key="ExpandKeyTime">0:0:0.250</KeyTime>
    <KeyTime x:Key="CollapseKeyTime">0:0:0.200</KeyTime>

    <Style x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPathRotateTransform" Storyboard.TargetProperty="Angle">
                                            <EasingDoubleKeyFrame KeyTime="{StaticResource ExpandKeyTime}" Value="180"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPathRotateTransform" Storyboard.TargetProperty="Angle">
                                            <EasingDoubleKeyFrame KeyTime="{StaticResource CollapseKeyTime}" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Path x:Name="ExpandPath" 
                                      Data="{StaticResource DownGeometry}"
                                      Height="{TemplateBinding FontSize}" Width="{TemplateBinding FontSize}"
                                      Fill="{TemplateBinding Foreground}"
                                      Stretch="Uniform"
                                      RenderTransformOrigin="0.5 0.5">
                            <Path.RenderTransform>
                                <RotateTransform x:Name="ExpandPathRotateTransform"/>
                            </Path.RenderTransform>
                        </Path>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{Binding Path=(controls:ExpanderAttach.HorizontalHeaderPadding) , RelativeSource={RelativeSource AncestorType=Expander, AncestorLevel=1}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="16"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Grid.Column="0"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>

                            <ToggleButton x:Name="ExpanderButton"
                                          Grid.Column="2"
                                          VerticalAlignment="Center"
                                          RenderTransformOrigin="0.5 0.5"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ExpanderToggleButton}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander, AncestorLevel=1}}" Value="Up">
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="180"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{Binding Path=(controls:ExpanderAttach.VerticalHeaderPadding) , RelativeSource={RelativeSource AncestorType=Expander, AncestorLevel=1}}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="16"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <ToggleButton x:Name="ExpanderButton"
                                          Grid.Row="0"
                                          VerticalAlignment="Center"
                                          RenderTransformOrigin="0.5 0.5"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ExpanderToggleButton}">
                                        <Style.Triggers>

                                            <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander, AncestorLevel=1}}" Value="Left">
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="90"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander, AncestorLevel=1}}" Value="Right">
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="-90"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                            <ContentPresenter Grid.Row="2"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AIStudio.Styles.Expander" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5"/>
        <Setter Property="controls:ExpanderAttach.HeaderBackground" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="controls:ExpanderAttach.HeaderForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="controls:ExpanderAttach.HeaderUpStyle" Value="{StaticResource HorizontalHeaderStyle}" />
        <Setter Property="controls:ExpanderAttach.HeaderDownStyle" Value="{StaticResource HorizontalHeaderStyle }" />
        <Setter Property="controls:ExpanderAttach.HeaderLeftStyle" Value="{StaticResource VerticalHeaderStyle}" />
        <Setter Property="controls:ExpanderAttach.HeaderRightStyle" Value="{StaticResource VerticalHeaderStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <ControlTemplate.Resources>
                        <converter:ExpanderRotateAngleConverter x:Key="ExpanderRotateAngleConverter" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="Expanded">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                             Storyboard.TargetName="ContentPanel" 
                                                             From="0" To="1"
                                                             Duration="{DynamicResource ExpandDuration}"/>
                                            <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform" 
                                                             Storyboard.TargetProperty="(ScaleTransform.ScaleY)" 
                                                             From="0" To="1"
                                                             Duration="{DynamicResource ExpandDuration}">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition To="Collapsed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                             Storyboard.TargetName="ContentPanel" 
                                                             From="1" To="0" 
                                                             Duration="{DynamicResource CollapseDuration}"/>
                                            <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform" 
                                                             Storyboard.TargetProperty="(ScaleTransform.ScaleY)" 
                                                             From="1" To="0"
                                                             Duration="{DynamicResource CollapseDuration}">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                         Storyboard.TargetName="ContentPanel" 
                                                         To="1" 
                                                         Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform" 
                                                         Storyboard.TargetProperty="(ScaleTransform.ScaleY)" 
                                                         To="1" 
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="ContentPanel"
                                                         To="0"
                                                         Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform"
                                                         Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                         To="0"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <DockPanel Background="{TemplateBinding Background}">
                            <ToggleButton Name="HeaderSite"
                                          Focusable="False"
                                          IsTabStop="False"
                                          DockPanel.Dock="Top"                                         
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          Cursor="Hand"
                                          IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource HorizontalHeaderStyle}"
                                          Opacity="0.87"
                                          Foreground="{TemplateBinding controls:ExpanderAttach.HeaderForeground}"
                                          Background="{TemplateBinding controls:ExpanderAttach.HeaderBackground}"
                                          IsEnabled="{TemplateBinding controls:ExpanderAttach.HeaderIsEnabled}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"/>
                            <Border x:Name="ExpandSite"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static converter:ThicknessSideType.Top}}"
                                    Focusable="false"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    UseLayoutRounding="True">
                                <Border.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform x:Name="ContentSiteScaleTransform" />
                                        <RotateTransform Angle="{Binding Path=ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander}, Converter={StaticResource ExpanderRotateAngleConverter}}"/>
                                    </TransformGroup>
                                </Border.LayoutTransform>

                                <Grid Name="ContentPanel"
                                      Margin="{TemplateBinding Padding}">
                                    <Grid.LayoutTransform>
                                        <RotateTransform Angle="{Binding Path=ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander}, Converter={StaticResource ExpanderRotateAngleConverter}, ConverterParameter=-1}"/>
                                    </Grid.LayoutTransform>

                                    <ContentPresenter Name="PART_Content" Focusable="False"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>

                                </Grid>
                            </Border>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ExpanderAttach.HeaderRightStyle)}"/>
                            <Setter Property="BorderThickness" TargetName="ExpandSite" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static converter:ThicknessSideType.Top}}"/>
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ExpanderAttach.HeaderLeftStyle)}"/>
                            <Setter Property="BorderThickness" TargetName="ExpandSite" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static converter:ThicknessSideType.Top}}"/>
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ExpanderAttach.HeaderUpStyle)}"/>
                            <Setter Property="BorderThickness" TargetName="ExpandSite" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static converter:ThicknessSideType.Bottom}}"/>
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Top"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ExpanderAttach.HeaderDownStyle)}"/>
                            <Setter Property="BorderThickness" TargetName="ExpandSite" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static converter:ThicknessSideType.Top}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                <Setter Property="controls:ExpanderAttach.HeaderBackground" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                <Setter Property="controls:ExpanderAttach.HeaderForeground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                <Setter Property="controls:ExpanderAttach.HeaderBackground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                <Setter Property="controls:ExpanderAttach.HeaderForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="controls:ExpanderAttach.HeaderBackground" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="controls:ExpanderAttach.HeaderForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="BorderBrush" Value="{DynamicResource Theme.ShowcaseBrush}" />
                <Setter Property="controls:ExpanderAttach.HeaderBackground" Value="{DynamicResource Theme.ShowcaseBrush}" />
                <Setter Property="controls:ExpanderAttach.HeaderForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="controls:ExpanderAttach.HeaderBackground" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="controls:ExpanderAttach.HeaderForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}" />
                <Setter Property="controls:ExpanderAttach.HeaderBackground" Value="{DynamicResource InfoBrush}" />
                <Setter Property="controls:ExpanderAttach.HeaderForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="BorderBrush" Value="{DynamicResource WarningBrush}" />
                <Setter Property="controls:ExpanderAttach.HeaderBackground" Value="{DynamicResource WarningBrush}" />
                <Setter Property="controls:ExpanderAttach.HeaderForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                <Setter Property="controls:ExpanderAttach.HeaderBackground" Value="{DynamicResource DangerBrush}" />
                <Setter Property="controls:ExpanderAttach.HeaderForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                <Setter Property="controls:ExpanderAttach.HeaderBackground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                <Setter Property="controls:ExpanderAttach.HeaderForeground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>