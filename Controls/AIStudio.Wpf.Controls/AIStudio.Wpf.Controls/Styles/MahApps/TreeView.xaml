<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:controls="clr-namespace:AIStudio.Wpf.Controls"
                    xmlns:converter="clr-namespace:AIStudio.Wpf.Controls.Converter"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Themes/Geometries.xaml" />
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MahApps/ToggleButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converter:BrushOpacityConverter x:Key="BrushOpacityConverter"/>
    <converter:TreeViewMarginConverter x:Key="TreeViewMarginConverter" Length="12" />
    <converter:TreeViewLineConverter x:Key="TreeViewLineConverter"/>
    <converter:TreeViewFirstLineConverter x:Key="TreeViewFirstLineConverter"/>
    <converter:GridLengthConverter x:Key="GridLengthConverter"/>
    <converter:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter"/>
    <converter:BrushRoundConverter x:Key="BrushRoundConverter" />

    <Style x:Key="AIStudio.Styles.TreeViewItem" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Border x:Name="Bd"
                                    MinHeight="{TemplateBinding MinHeight}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    UseLayoutRounding="True">
                            <Grid Margin="{Binding Converter={StaticResource TreeViewMarginConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="Expander"
                                              Style="{StaticResource AIStudio.Styles.TreeToggleButton}"
                                              Foreground="{TemplateBinding Foreground}"
                                              ClickMode="Press"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}" />
                                <controls:Ripple Grid.Column="1"
                                                Focusable="False"   
                                                Padding="{TemplateBinding Padding}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ContentPresenter x:Name="PART_Header"                                                  
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </controls:Ripple>
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>

                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground), RelativeSource={RelativeSource Mode=Self}}" />
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BrushOpacityConverter},ConverterParameter=0.6}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground), RelativeSource={RelativeSource Mode=Self}}" />
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing"
                     Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.TreeViewItem.Classic" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Border x:Name="Bd"
                                    MinHeight="{TemplateBinding MinHeight}"                                   
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    UseLayoutRounding="True">
                            <Grid Margin="{Binding Converter={StaticResource TreeViewMarginConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" MinWidth="19" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="Expander" Grid.Column="0" Grid.ColumnSpan="2" 
                                                  Style="{StaticResource AIStudio.Styles.ComboToggleButton}"
                                                  controls:IconAttach.Geometry="{StaticResource FillUpGeometry}"
                                                  Margin="0,0,5,0"
                                                  Foreground="{TemplateBinding Foreground}"                                              
                                                  IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}" />
                                <controls:Ripple Focusable="False"   
                                             Padding="{TemplateBinding Padding}"
                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                             Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ContentPresenter x:Name="PART_Header" 
                                                  Grid.Column="0"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </controls:Ripple>
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                            <ItemsPresenter.LayoutTransform>
                                <ScaleTransform ScaleY="0" ScaleX="1"/>
                            </ItemsPresenter.LayoutTransform>
                        </ItemsPresenter>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3"
                                                         Storyboard.TargetName="ItemsHost"
                                                         Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3"
                                                         Storyboard.TargetName="ItemsHost"
                                                         Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>

                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground), RelativeSource={RelativeSource Mode=Self}}" />
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BrushOpacityConverter},ConverterParameter=0.6}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground), RelativeSource={RelativeSource Mode=Self}}" />
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing"
                     Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.TreeViewItem.Modern" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Border x:Name="Bd"
                                        MinHeight="{TemplateBinding MinHeight}"                                   
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        UseLayoutRounding="True">
                            <Grid>
                                <Rectangle x:Name="Rect" Width="3" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BrushOpacityConverter},ConverterParameter=0.12}" HorizontalAlignment="Left" />

                                <Grid Margin="{Binding Converter={StaticResource TreeViewMarginConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" MinWidth="19" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander"  Grid.Column="0" Grid.ColumnSpan="3" 
                                                  Style="{StaticResource AIStudio.Styles.ComboToggleButton}"
                                                  controls:IconAttach.Geometry="{StaticResource FillUpGeometry}"
                                                  Margin="0,0,5,0"
                                                  Foreground="{TemplateBinding Foreground}"                                              
                                                  IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}" />
                                    <controls:Ripple Focusable="False" Grid.Column="1"
                                                 Padding="{TemplateBinding Padding}"
                                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                 Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <ContentPresenter x:Name="PART_Header" 
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </controls:Ripple>
                                </Grid>
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                            <ItemsPresenter.LayoutTransform>
                                <ScaleTransform ScaleY="0" ScaleX="1"/>
                            </ItemsPresenter.LayoutTransform>
                        </ItemsPresenter>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3"
                                                         Storyboard.TargetName="ItemsHost"
                                                         Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3"
                                                         Storyboard.TargetName="ItemsHost"
                                                         Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>

                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BrushOpacityConverter},ConverterParameter=0.12}" />
                            <Setter TargetName="Rect" Property="Fill" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BrushOpacityConverter},ConverterParameter=0.6}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Rect" Property="Fill" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Rect" Property="Fill" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing"
                     Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.TreeViewItem.Chain" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid VerticalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Name="Bd" 
                                        Grid.Column="0" Grid.ColumnSpan="3" 
                                        Background="{TemplateBinding Background}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Padding="{TemplateBinding Padding}" 
                                        MinHeight="{TemplateBinding MinHeight}"
                                        UseLayoutRounding="True"/>

                        <!-- Connecting Lines -->
                        <Rectangle x:Name="HorLn" Margin="10,0,0,0" Height="1" Stroke="{TemplateBinding Foreground}" UseLayoutRounding="True"/>
                        <Rectangle x:Name="VerLn" Width="1" Stroke="{TemplateBinding Foreground}" Margin="0,0,0,0" Grid.RowSpan="2" UseLayoutRounding="True"/>

                        <ToggleButton x:Name="Expander" Padding="1" BorderThickness="1" 
                                              Style="{DynamicResource AIStudio.Styles.ToggleButton.Icon}" 
                                              controls:IconAttach.GeometrySelected="{StaticResource SubGeometry}" 
                                              controls:IconAttach.Geometry="{StaticResource AddGeometry}" 
                                              controls:IconAttach.Width="10"
                                              controls:IconAttach.Height="10"
                                              Width="15"
                                              Height="15"
                                              Foreground="{TemplateBinding Foreground}"
                                              Background="{TemplateBinding Background}"
                                              controls:ControlAttach.Background="{TemplateBinding controls:ControlAttach.Background}"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                              ClickMode="Press"
                                              VerticalAlignment="Center"
                                              UseLayoutRounding="True"/>

                        <Rectangle Grid.Column="2" Height="1" Stroke="{TemplateBinding Foreground}" Width="{Binding Path=Padding, RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource ThicknessToDoubleConverter}}" UseLayoutRounding="True" HorizontalAlignment="Left"/>
                        <Border x:Name="ContentBorder" Grid.Column="1" Grid.ColumnSpan="2" Padding="{TemplateBinding Padding}" MinHeight="{TemplateBinding MinHeight}" UseLayoutRounding="True">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>



                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- This trigger changes the connecting lines if the item is the last in the list -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource TreeViewLineConverter}}" Value="true">
                            <Setter TargetName="VerLn" Property="Height" Value="13"/>
                            <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                        </DataTrigger>
                        <!-- This trigger changes the connecting lines if the item is the first in the list -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource TreeViewFirstLineConverter}}" Value="true">
                            <Setter TargetName="VerLn" Property="Margin" Value="0,13,0,0"/>
                        </DataTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger SourceName="Expander" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BrushOpacityConverter},ConverterParameter=0.6}" />
                        </Trigger>
                        <Trigger SourceName="ContentBorder" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BrushOpacityConverter},ConverterParameter=0.6}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing"
                     Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.TreeView" TargetType="{x:Type TreeView}">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <!--  default to 0  -->
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer x:Name="TreeViewScrollViewer"
                                      Padding="{TemplateBinding Padding}"
                                      CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(controls:TreeViewAttach.ControlStyle),RelativeSource={RelativeSource Mode=Self}}" Value="Standard">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style BasedOn="{StaticResource AIStudio.Styles.TreeViewItem}" TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Foreground" Value="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="Background" Value="{Binding Background,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="controls:ControlAttach.Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                            <Setter Property="controls:ControlAttach.Background" Value="{Binding Path=(controls:ControlAttach.Background),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(controls:TreeViewAttach.ControlStyle),RelativeSource={RelativeSource Mode=Self}}" Value="Classic">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style BasedOn="{StaticResource AIStudio.Styles.TreeViewItem.Classic}" TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Foreground" Value="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="Background" Value="{Binding Background,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="controls:ControlAttach.Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                            <Setter Property="controls:ControlAttach.Background" Value="{Binding Path=(controls:ControlAttach.Background),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(controls:TreeViewAttach.ControlStyle),RelativeSource={RelativeSource Mode=Self}}" Value="Modern">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style BasedOn="{StaticResource AIStudio.Styles.TreeViewItem.Modern}" TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Foreground" Value="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="Background" Value="{Binding Background,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="controls:ControlAttach.Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                            <Setter Property="controls:ControlAttach.Background" Value="{Binding Path=(controls:ControlAttach.Background),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(controls:TreeViewAttach.ControlStyle),RelativeSource={RelativeSource Mode=Self}}" Value="Chain">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style BasedOn="{StaticResource AIStudio.Styles.TreeViewItem.Chain}" TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Foreground" Value="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="Background" Value="{Binding Background,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="controls:ControlAttach.Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                            <Setter Property="controls:ControlAttach.Background" Value="{Binding Path=(controls:ControlAttach.Background),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource InfoBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource WarningBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource DangerBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray9}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.TreeView.Virtualised"
           BasedOn="{StaticResource AIStudio.Styles.TreeView}"
           TargetType="{x:Type TreeView}">
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
    </Style>

    <Style x:Key="AIStudio.Styles.TreeViewItem.Menu" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Grid x:Name="Root_Grid" Background="Transparent">
                            <Grid x:Name="PART_Background" Background="{TemplateBinding Foreground}" Opacity="0" />
                            <Border x:Name="Bd" Opacity="0.75"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <controls:Ripple Focusable="False" 
                                         Padding="{TemplateBinding Padding}" 
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                         Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Grid Margin="{Binding Converter={StaticResource TreeViewMarginConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" MinWidth="19" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter x:Name="PART_Header"
                                                  Grid.Column="0"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <ToggleButton x:Name="Expander"  Grid.Column="1"
                                              Style="{StaticResource AIStudio.Styles.ComboToggleButton}"
                                              controls:IconAttach.Geometry="{StaticResource FillUpGeometry}"
                                              Margin="0,0,5,0"
                                              Foreground="{TemplateBinding Foreground}"
                                              ClickMode="Press"
                                              IsHitTestVisible="False"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}" />
                                    </Grid>
                                </controls:Ripple>
                            </Border>
                        </Grid>
                        <ItemsPresenter x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                            <ItemsPresenter.LayoutTransform>
                                <ScaleTransform ScaleY="0" ScaleX="1"/>
                            </ItemsPresenter.LayoutTransform>
                        </ItemsPresenter>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>-->
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3"
                                                         Storyboard.TargetName="ItemsHost"
                                                         Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3"
                                                         Storyboard.TargetName="ItemsHost"
                                                         Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>

                        <Trigger SourceName="Root_Grid" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Background" Property="Opacity" Value="0.3" />
                            <Setter TargetName="Bd" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Background" Property="Opacity" Value="0.2" />
                            <Setter TargetName="Bd" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Background" Property="Opacity" Value="0.35" />
                            <Setter TargetName="Bd" Property="Opacity" Value="1" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="AIStudio.Styles.TreeView.Menu" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource AIStudio.Styles.TreeViewItem.Menu}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="controls:TreeViewAttach.ExpandBehaviour" Value="OnlyOne"/>
        <Setter Property="controls:TreeViewAttach.ExpandMode" Value="SingleClick"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer x:Name="TreeViewScrollViewer"
                                      Padding="{TemplateBinding Padding}"
                                      CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray9}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Toggle Button -->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="21" Height="19" SnapsToDevicePixels="True">
                        <Rectangle Width="15" Height="15" Stroke="#919191" SnapsToDevicePixels="true">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Silver" Offset="0.5"/>
                                    <GradientStop Color="LightGray" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="ExpandPath" Width="1" Height="11" Stroke="Black" SnapsToDevicePixels="true"/>
                        <Rectangle Width="11" Height="1" Stroke="Black" SnapsToDevicePixels="true"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility"  TargetName="ExpandPath" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <converter:HorzLineConv x:Key="horzLineConv"/>
    <converter:VertLineConv x:Key="vertLineConv"/>
    
    <!--内容区域的边框颜色-->
    <SolidColorBrush x:Key="NormalBorderBrushKey" Color="Transparent" />
    <!--连接线颜色-->
    <SolidColorBrush x:Key="ConnectLineBrushKey" Color="Gray" />
    <!-- 悬停状态的画刷 -->
    <LinearGradientBrush x:Key="HoverBackgroundBrushKey" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD1F896" Offset="0.003"/>
        <GradientStop Color="#FFD0F896" Offset="0.996"/>
        <GradientStop Color="#FFC5F582" Offset="0.505"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrushKey" Color="#FF1B82A8" />
    <SolidColorBrush x:Key="HoverFontBrushKey" Color="Black" />
    <!-- 选中(激活)状态的画刷/字体 -->
    <LinearGradientBrush x:Key="SelectedActiveBackgroundBrushKey" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFB8F561" Offset="0"/>
        <GradientStop Color="#FFBAF565" Offset="0.992"/>
        <GradientStop Color="#FFAFF052" Offset="0.505"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="SelectedActiveBorderBrushKey" Color="#FF1B82A8" />
    <SolidColorBrush x:Key="SelectedActiveFontBrushKey" Color="Black" />
    <!-- 选中(悬停)状态的画刷 -->
    <LinearGradientBrush x:Key="SelectedHoverBackgroundBrushKey" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFB6F161" Offset="0"/>
        <GradientStop Color="#FFB3F05D" Offset="1"/>
        <GradientStop Color="#FFACEC4F" Offset="0.532"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="SelectedHoverBorderBrushKey" Color="#FF1B82A8" />
    <SolidColorBrush x:Key="SelectedHoverFontBrushKey" Color="Black" />
    <!-- 选中(失效)状态的画刷 -->
    <LinearGradientBrush x:Key="SelectedInactiveBackgroundBrushKey" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFBAF565" Offset="0"/>
        <GradientStop Color="#FFBAF565" Offset="1"/>
        <GradientStop Color="#FFACEC4F" Offset="0.519"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="SelectedInactiveBorderBrushKey" Color="#FF2896BF" />
    <!-- 展开/缩进按钮风格 -->
    <Style x:Key="ExpandCollapseToggleStyle2" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <!--此处的高度应和朝下的垂直线高度一致-->
                    <Grid Width="14" Height="12" SnapsToDevicePixels="false" Background="#02ECECEC">
                        <Path x:Name="Arrow" Width="14"  Stretch="Fill" Fill="Black" VerticalAlignment="Center"
                              RenderTransformOrigin="0.5,0.5"
                              Data="F1 M 37.8516,39.5833L 52.1016,24.9375L 52.1016,35.2292L 37.8516,50.2708L 23.6016,35.2292L 23.6016,24.9375L 37.8516,39.5833 Z ">
                            <Path.RenderTransform>
                                <RotateTransform Angle="0"/>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- 当鼠标经过时的风格 -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="Arrow">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FF958D8D" Offset="0.5"/>
                                        <GradientStop Color="LightGray" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <!--折叠展开的旋转动画-->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="180"
                                                 Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--树形视图项风格-->
    <Style TargetType="TreeViewItem" x:Key="GraphStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <ControlTemplate.Resources>
                        <!--展开动画-->
                        <Storyboard x:Key="Timeline1">
                            <!--控制可见性-->
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItemsHost">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="VerLineDown">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <!--控制伸出-->
                            <DoubleAnimation Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="LayoutTransform.ScaleX" To="1" Duration="0:0:0.4">
                                <DoubleAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseInOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <!--控制透明度-->
                            <DoubleAnimation Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5"/>
                        </Storyboard>
                        <!--折叠动画-->
                        <Storyboard x:Key="Timeline2">
                            <!--控制收缩-->
                            <DoubleAnimation Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="LayoutTransform.ScaleX" To="0" Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseInOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <!--控制透明度-->
                            <DoubleAnimation Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.4" />
                            <!--控制可见性-->
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItemsHost">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="VerLineDown">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <!-- Main Grid-->
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!-- Horizontal line-->
                            <RowDefinition Height="Auto"/>
                            <!--The top row contains the item's content.-->
                            <RowDefinition Height="Auto" />
                            <!-- Item presenter(children) -->
                        </Grid.RowDefinitions>
                        <!--第0行水平线-->
                        <Grid Grid.Row="0">
                            <!-- Horizontal line grid -->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!-- 左侧水平线 -->
                            <Rectangle  Grid.Column="0" HorizontalAlignment="Stretch"
                          Stroke="{StaticResource ConnectLineBrushKey}" SnapsToDevicePixels="false">
                                <Rectangle.Height>
                                    <Binding  Mode="OneWay"
                            Converter="{StaticResource horzLineConv}"
                            ConverterParameter="left" 
                            RelativeSource="{RelativeSource
                                AncestorLevel=1,
                                AncestorType={x:Type TreeViewItem}}"/>
                                </Rectangle.Height>
                            </Rectangle>

                            <!-- 右侧水平线 -->
                            <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" 
                         Stroke="{StaticResource ConnectLineBrushKey}"
                         SnapsToDevicePixels="false">
                                <Rectangle.Height>
                                    <Binding Mode="OneWay" 
                    Converter="{StaticResource horzLineConv}" 
                    ConverterParameter="right" 
                    RelativeSource="{RelativeSource 
                      AncestorLevel=1, 
                      AncestorType={x:Type TreeViewItem}}"/>
                                </Rectangle.Height>
                            </Rectangle>
                        </Grid>
                        <!-- End of Horizontal line grid -->

                        <Grid Grid.Row="1">
                            <!-- Header 内容显示区域 -->
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <!-- Vert. line above node	-->
                                <RowDefinition Height="*"/>
                                <!-- Header -->
                                <RowDefinition Height="Auto"/>
                                <!-- Vert line below node	-->
                            </Grid.RowDefinitions>
                            <!-- 朝上的垂直线,这里垂直线的高度确定了项上部垂直线的高度 -->
                            <Rectangle Grid.Row="0" 
                         Height="15" Stroke="{StaticResource ConnectLineBrushKey}" SnapsToDevicePixels="false">
                                <Rectangle.Width>
                                    <Binding Mode="OneWay" 
                    Converter="{StaticResource vertLineConv}" 
                    ConverterParameter="top" 
                    RelativeSource=
                      "{RelativeSource AncestorLevel=1, 
                                       AncestorType={x:Type TreeViewItem}}"/>
                                </Rectangle.Width>
                            </Rectangle>

                            <!-- Header 内容显示区域-->
                            <Border x:Name="borderHeader" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2,0"
                        Background="Transparent" BorderThickness="1" BorderBrush="{StaticResource NormalBorderBrushKey}">
                                <ContentPresenter  ContentSource="Header"/>
                            </Border>
                            <!-- 朝下的垂直线 -->
                            <Rectangle x:Name="VerLineDown"  Grid.Row="2"  Height="20" Stroke="{StaticResource ConnectLineBrushKey}" 
                SnapsToDevicePixels="false" Visibility="Collapsed">
                                <Rectangle.Width>
                                    <Binding Mode="OneWay" 
                    Converter="{StaticResource vertLineConv}" 
                    ConverterParameter="bottom" 
                    RelativeSource=
                      "{RelativeSource  AncestorLevel=1, 
                                        AncestorType={x:Type TreeViewItem}}"/>
                                </Rectangle.Width>
                            </Rectangle>
                            <!--展开折叠按钮-->
                            <ToggleButton Grid.Row="2" Margin="0" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" VerticalAlignment="Top"
                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"
                               />

                        </Grid>
                        <!-- End of Header grid -->
                        <!--内容预设-->
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="2" Visibility="Collapsed" Opacity="0">
                            <!--预设比拟动画-->
                            <ItemsPresenter.LayoutTransform>
                                <ScaleTransform ScaleX="0" />
                            </ItemsPresenter.LayoutTransform>
                        </ItemsPresenter>
                        <!-- Children -->

                    </Grid>
                    <!-- End of Main grid -->
                    <ControlTemplate.Triggers>
                        <!--收缩时-->
                        <Trigger Property="IsExpanded" Value="true">
                            <!--<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="VerLineDown" Property="Visibility" Value="Collapsed" />-->
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Timeline2}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--当子项为0时-->
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <!--当项被选择时-->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="borderHeader" Property="BorderBrush"  Value="{StaticResource SelectedActiveBorderBrushKey}"/>
                            <Setter TargetName="borderHeader" Property="Background" Value="{StaticResource SelectedActiveBackgroundBrushKey}"/>
                            <Setter Property="Foreground" Value="{StaticResource SelectedActiveFontBrushKey}"/>
                        </Trigger>
                        <!--当项被选择，而控件失去焦点时-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="borderHeader" Property="BorderBrush" Value="{StaticResource SelectedInactiveBorderBrushKey}"/>
                            <Setter TargetName="borderHeader" Property="Background" Value="{StaticResource SelectedInactiveBackgroundBrushKey}"/>
                        </MultiTrigger>
                        <!--当鼠标悬停，且没有被选中时-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="borderHeader" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource HoverFontBrushKey}"/>
                            <Setter TargetName="borderHeader" Property="Background" Value="{StaticResource HoverBackgroundBrushKey}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" 
								Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--用于展现水平排布-->
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel
            HorizontalAlignment="Center" 
            IsItemsHost="True" 
            Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>