<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:AIStudio.Wpf.Controls"
                    xmlns:converter="clr-namespace:AIStudio.Wpf.Controls.Converter">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MahApps/Button.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MahApps/ValidationErrorTemplate.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <converter:ShadowConverter x:Key="ShadowConverter"/>
    <converter:ThicknessBindingConverter x:Key="ThicknessBindingConverter"/>

    <!--TextBox默认样式-->
    <Style x:Key="AIStudio.Styles.TextBox" TargetType="{x:Type TextBoxBase}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
        <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="CaretBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="controls:ControlAttach.CornerRadius" Value="{DynamicResource DefaultCornerRadius}"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="controls:IconAttach.Width" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="controls:IconAttach.Height" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource AIStudio.Styles.ValidationErrorTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid x:Name="PART_Root">
                        <!--<AdornerDecorator>-->
                        <Border x:Name="border" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding controls:ControlAttach.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ShadowAttach.DropShadowEffect),Converter={StaticResource ShadowConverter}}"/>
                        <!--</AdornerDecorator>-->
                        <Grid x:Name="PART_InnerGrid" Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition  Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition  Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <!--Label区域-->
                            <ContentControl x:Name="Label" Margin="0" Template="{TemplateBinding controls:ControlAttach.LabelTemplate}" IsTabStop="False" IsHitTestVisible="False"/>

                            <DockPanel Grid.Column="1" LastChildFill="True">
                                <ContentControl x:Name="PART_IconContent" TextElement.Foreground="{TemplateBinding Foreground}" DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" Template="{TemplateBinding controls:ControlAttach.IconContent}" IsTabStop="False" Margin="0,0,0,0"/>
                                <Grid x:Name="padding" DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" Margin="5,0,0,0"></Grid>
                                <Grid>
                                    <!--内容区域-->
                                    <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" IsTabStop="False" controls:ContentHostAttach.Padding="0" Background="{x:Null}" />
                                    <!--水印-->
                                    <TextBlock x:Name="Message" Visibility="Collapsed" 
                                       Text="{TemplateBinding controls:ControlAttach.Watermark}"
                                       Foreground="{TemplateBinding BorderBrush}" IsHitTestVisible="False" Opacity="0.4" Margin="2,0"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Grid>
                            </DockPanel>

                            <!--附加内容区域-->
                            <Border x:Name="PART_AttachContent" Grid.Column="2">
                                <ContentControl Template="{TemplateBinding controls:ControlAttach.AttachContent}" IsTabStop="False" />
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--显示水印-->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(controls:ControlAttach.BorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter  Property="BorderBrush" Value="{Binding Path=(controls:ControlAttach.BorderBrush),RelativeSource={RelativeSource Self}}"/>
                            <Setter Property="controls:ShadowAttach.DropShadowEffect" Value="{StaticResource ShadowDepth1}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(controls:ControlAttach.IconContent), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </DataTrigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Control.Validation}"/>
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                        <!--不可用-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Root" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <!--只读时，禁用PART_AttachContent-->
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="PART_AttachContent" Property="IsEnabled" Value="False" />
                            <Setter TargetName="border" Property="Opacity" Value="0.88" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="0.88" />
                            <Setter TargetName="Label" Property="Opacity" Value="0.88" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="controls:ControlAttach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Button x:Name="clear" 
                            Visibility="Collapsed" 
                            Foreground="{Binding Path=(controls:ControlAttach.BorderBrush),RelativeSource={RelativeSource AncestorType=TextBox}}"
                            Focusable="False"
                            IsTabStop="False" 
                            Style="{StaticResource AIStudio.Styles.Button.Clear}"
                            controls:ControlAttach.ClearTextButton="{Binding Path=(controls:ControlAttach.ClearTextButton),RelativeSource={RelativeSource AncestorType=TextBox}}" 
                            Command="controls:ControlAttach.ClearTextCommand" 
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}" />
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                                <Condition Binding="{Binding Path=(controls:ControlAttach.ClearTextButton), RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="clear" Property="Visibility" Value="Visible"></Setter>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Null}">
                            <Setter TargetName="clear" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="">
                            <Setter TargetName="clear" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                            <Setter TargetName="clear" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Geometry),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <Path x:Name="icon" 
                                Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=TextBoxBase}}" 
                                Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=TextBoxBase}}" 
                                Fill="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                SnapsToDevicePixels="True" 
                                Stretch="Uniform" 
                                Data="{Binding Path=(controls:IconAttach.Geometry),RelativeSource={RelativeSource AncestorType=TextBoxBase}}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Kind),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <controls:PathIcon x:Name="icon"
                                  Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=TextBoxBase}}" 
                                  Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=TextBoxBase}}" 
                                  Foreground="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                  SnapsToDevicePixels="True" 
                                  RenderTransformOrigin="0.5,0.5"
                                  Kind="{Binding Path=(controls:IconAttach.Kind),RelativeSource={RelativeSource AncestorType=TextBoxBase}}" >
                            </controls:PathIcon>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(controls:IconAttach.Icon),RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullableToBoolConverter}}" Value="false">
                <Setter Property="controls:ControlAttach.IconContent">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <controls:Icon x:Name="icon"
                                  Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=TextBoxBase}}" 
                                  Height="{Binding Path=(controls:IconAttach.Height),RelativeSource={RelativeSource AncestorType=TextBoxBase}}" 
                                  FontSize="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource AncestorType=TextBoxBase}}" 
                                  Foreground="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                  SnapsToDevicePixels="True" 
                                  Kind="{Binding Path=(controls:IconAttach.Icon),RelativeSource={RelativeSource AncestorType=TextBoxBase}}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                <Setter Property="CaretBrush" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource MahApps.Brushes.Accent3}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                <Setter Property="CaretBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="CaretBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource Theme.ShowcaseBrush}" />
                <Setter Property="CaretBrush" Value="{DynamicResource Theme.ShowcaseBrush}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource Theme.ShowcaseBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="CaretBrush" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource SuccessBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource InfoBrush}" />
                <Setter Property="CaretBrush" Value="{DynamicResource InfoBrush}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource InfoBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource WarningBrush}" />
                <Setter Property="CaretBrush" Value="{DynamicResource WarningBrush}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource WarningBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource DangerBrush}" />
                <Setter Property="CaretBrush" Value="{DynamicResource DangerBrush}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource DangerBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray2}" />
                <Setter Property="CaretBrush" Value="{DynamicResource MahApps.Brushes.Gray2}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--TextBox包含附加属性Label的样式-->
    <Style x:Key="AIStudio.Styles.TextBox.Label" BasedOn="{StaticResource AIStudio.Styles.TextBox}" TargetType="{x:Type TextBoxBase}">
        <Setter Property="controls:ControlAttach.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <TextBlock VerticalAlignment="Center" Margin="{Binding Path=Padding,RelativeSource={RelativeSource AncestorType=TextBox},Converter={StaticResource ThicknessBindingConverter},ConverterParameter={x:Static converter:ThicknessSideType.OnlyRight}}" Text="{Binding Path=(controls:ControlAttach.Label),RelativeSource={RelativeSource AncestorType=TextBox}}"></TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MaxLength-->
    <Style x:Key="AIStudio.Styles.TextBox.MaxLength" BasedOn="{StaticResource AIStudio.Styles.TextBox}" TargetType="{x:Type TextBoxBase}">
        <Setter Property="Padding" Value="6,6,0,6" />
        <Setter Property="controls:ControlAttach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock VerticalAlignment="Center" Margin="3" Foreground="{Binding Path=(TextElement.Foreground),RelativeSource={RelativeSource AncestorType=TextBox}}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0}/{1}">
                                <Binding Path="Text.Length" RelativeSource="{RelativeSource AncestorType=TextBox}" />
                                <Binding Path="MaxLength" RelativeSource="{RelativeSource AncestorType=TextBox}"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--AIStudio.Styles.TextBox.Underline样式-->
    <Style x:Key="AIStudio.Styles.TextBox.Underline" BasedOn="{StaticResource AIStudio.Styles.TextBox}" TargetType="{x:Type TextBoxBase}">
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="controls:ControlAttach.CornerRadius" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding controls:ControlAttach.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" />
                        <Grid x:Name="PART_InnerGrid" Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition  Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition  Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <!--Label区域-->
                            <ContentControl x:Name="Label" Margin="1" Template="{TemplateBinding controls:ControlAttach.LabelTemplate}"
                                            Content="{TemplateBinding controls:ControlAttach.Label}" IsTabStop="False" IsHitTestVisible="False"/>

                            <DockPanel Grid.Column="1" LastChildFill="True">
                                <ContentControl x:Name="PART_IconContent" TextElement.Foreground="{TemplateBinding Foreground}" DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" Template="{TemplateBinding controls:ControlAttach.IconContent}" IsTabStop="False" Margin="0,0,0,0"/>
                                <Grid x:Name="padding" DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" Margin="5,0,0,0"></Grid>
                                <Grid>
                                    <!--内容区域-->
                                    <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" IsTabStop="False" controls:ContentHostAttach.Padding="0" Background="{x:Null}" />
                                    <!--水印-->
                                    <TextBlock x:Name="Message" Visibility="Collapsed" 
                                       Text="{TemplateBinding controls:ControlAttach.Watermark}"
                                       Foreground="{TemplateBinding BorderBrush}" IsHitTestVisible="False" Opacity="0.4" Margin="2,0"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Grid>
                            </DockPanel>

                            <!--附加内容区域-->
                            <Border x:Name="PART_AttachContent" Grid.Column="2" Margin="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <ContentControl VerticalAlignment="Top" VerticalContentAlignment="Top" Template="{TemplateBinding controls:ControlAttach.AttachContent}" IsTabStop="False" />
                            </Border>
                        </Grid>

                        <controls:Underline x:Name="Underline" IsTabStop="False" Background="{TemplateBinding controls:ControlAttach.BorderBrush}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--显示水印-->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(controls:ControlAttach.BorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Underline" Property="IsActive" Value="True"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter  Property="BorderBrush" Value="{Binding Path=(controls:ControlAttach.BorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(controls:ControlAttach.IconContent), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </DataTrigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Control.Validation}"/>
                            <Setter TargetName="Underline" Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Validation}"/>
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                        <!--不可用-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Root" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <!--只读时，禁用PART_AttachContent-->
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="PART_AttachContent" Property="IsEnabled" Value="False" />
                            <Setter TargetName="Bg" Property="Opacity" Value="0.88" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="0.88" />
                            <Setter TargetName="Label" Property="Opacity" Value="0.88" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                <Setter Property="CaretBrush" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource MahApps.Brushes.Accent3}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                <Setter Property="CaretBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="CaretBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource Theme.ShowcaseBrush}" />
                <Setter Property="CaretBrush" Value="{DynamicResource Theme.ShowcaseBrush}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource Theme.ShowcaseBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="CaretBrush" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource SuccessBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource InfoBrush}" />
                <Setter Property="CaretBrush" Value="{DynamicResource InfoBrush}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource InfoBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource WarningBrush}" />
                <Setter Property="CaretBrush" Value="{DynamicResource WarningBrush}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource WarningBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource DangerBrush}" />
                <Setter Property="CaretBrush" Value="{DynamicResource DangerBrush}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource DangerBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray2}" />
                <Setter Property="CaretBrush" Value="{DynamicResource MahApps.Brushes.Gray2}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--编辑状态文本框样式-->
    <Style x:Key="AIStudio.Styles.TextBox.ComboBox.Editable" TargetType="{x:Type TextBox}" >
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="CaretBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Opacity" Value="0.88"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.TextBox.Plain" BasedOn="{StaticResource AIStudio.Styles.TextBox}" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="6" />
        <Setter Property="Padding" Value="0" />
    </Style>

</ResourceDictionary>