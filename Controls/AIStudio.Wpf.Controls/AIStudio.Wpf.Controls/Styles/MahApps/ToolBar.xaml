<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:AIStudio.Wpf.Controls"
                    xmlns:converter="clr-namespace:AIStudio.Wpf.Controls.Converter">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MahApps/CheckBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MahApps/ComboBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MahApps/Menu.xaml" />
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MahApps/RadioButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Themes/Shadows.xaml" />
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MahApps/TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MahApps/Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MahApps/ToggleButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MahApps/ListBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converter:ToolBarOverflowButtonVisibilityConverter x:Key="ToolBarOverflowButtonVisibilityConverter" />

    <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        CornerRadius="0,0,3,3"
                        SnapsToDevicePixels="true">
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Data="M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z" Fill="{TemplateBinding Foreground}" />
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--  Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/  -->
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <!--  Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/  -->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        CornerRadius="0,3,3,0"
                        SnapsToDevicePixels="true">
                        <Viewbox
                            Width="16"
                            Height="16"
                            Margin="8,0,8,0">
                            <Canvas Width="24" Height="24">
                                <Path Data="M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z" Fill="{TemplateBinding Foreground}" />
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--  Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/  -->
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <!--  Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/  -->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DesignToolBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Separator}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush
                                    TileMode="Tile"
                                    Viewbox="0,0,4,4"
                                    ViewboxUnits="Absolute"
                                    Viewport="0,0,4,4"
                                    ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="{TemplateBinding Foreground}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z" />
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="SizeAll" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,0,11,0" />
        <Setter Property="CornerRadius" Value="{DynamicResource DefaultCornerRadius}" />
    </Style>

    <Style x:Key="AIStudio.Styles.ToolBar" TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <ControlTemplate.Resources>
                        <Style BasedOn="{StaticResource AIStudio.Styles.ListBox.Toggle}" TargetType="ListBox">
                            <Setter Property="ItemContainerStyle">
                                <Setter.Value>
                                    <Style BasedOn="{StaticResource AIStudio.Styles.ListBoxItem.Toggle}" TargetType="ListBoxItem">
                                        <Setter Property="TextBlock.FontWeight" Value="DemiBold" />
                                        <Setter Property="TextBlock.FontSize" Value="18" />
                                        <Setter Property="MinWidth" Value="54" />
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        <Setter Property="Padding" Value="16" />
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <DockPanel
                        x:Name="Grid"
                        Margin="3,1,1,1"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="true">
                        <Grid
                            x:Name="OverflowGrid"
                            HorizontalAlignment="Right"
                            DockPanel.Dock="Right">
                            <ToggleButton
                                x:Name="OverflowButton"
                                ClickMode="Press"
                                FocusVisualStyle="{x:Null}"
                                Foreground="{TemplateBinding Foreground}"
                                Background="{TemplateBinding Background}"
                                IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}">
                                <ToggleButton.Visibility>
                                    <MultiBinding Converter="{StaticResource ToolBarOverflowButtonVisibilityConverter}">
                                        <Binding Path="OverflowMode" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="HasOverflowItems" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </ToggleButton.Visibility>
                            </ToggleButton>
                            <Popup
                                x:Name="OverflowPopup"
                                Margin="1"
                                AllowsTransparency="true"
                                Focusable="false"
                                IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Bottom"
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                StaysOpen="false">
                                <!--  warning, this will cache the inner item as well, consider separating the shadow from the item if possible  -->
                                <Popup.CacheMode>
                                    <BitmapCache EnableClearType="True" SnapsToDevicePixels="True" />
                                </Popup.CacheMode>
                                <Border
                                    x:Name="ToolBarSubMenuBorder"
                                    Margin="1"
                                    Background="{DynamicResource MahApps.Brushes.Gray7}"
                                    BorderBrush="{DynamicResource MahApps.Brushes.Separator}"
                                    BorderThickness="1"
                                    CornerRadius="2"
                                    Effect="{StaticResource ShadowDepth2}"
                                    RenderOptions.ClearTypeHint="Enabled"
                                    TextBlock.FontWeight="ExtraBold">
                                    <Border Background="Transparent">
                                        <ToolBarOverflowPanel
                                            x:Name="PART_ToolBarOverflowPanel"
                                            Margin="2"
                                            FocusVisualStyle="{x:Null}"
                                            Focusable="true"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            WrapWidth="200" />
                                    </Border>
                                </Border>
                            </Popup>
                        </Grid>
                        <Border
                            x:Name="MainPanelBorder"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Style="{StaticResource ToolBarMainPanelBorderStyle}">
                            <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                <Thumb
                                    x:Name="ToolBarThumb"
                                    Width="10"
                                    Margin="-3,-1,4,0"
                                    Padding="6,5,1,3"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{StaticResource DesignToolBarThumbStyle}" />
                                <ContentPresenter
                                    x:Name="ToolBarHeader"
                                    Margin="4,0,4,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    ContentSource="Header"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <ToolBarPanel
                                    x:Name="PART_ToolBarPanel"
                                    Margin="0,0,2,0"
                                    IsItemsHost="true"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </DockPanel>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false" />
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter TargetName="ToolBarHeader" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger SourceName="OverflowPopup" Property="HasDropShadow" Value="true">
                            <Setter TargetName="ToolBarSubMenuBorder" Property="Margin" Value="5,5,5,5" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Grid" Property="Margin" Value="1,3,1,1" />
                            <Setter TargetName="OverflowButton" Property="Style" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
                            <Setter TargetName="ToolBarThumb" Property="Height" Value="10" />
                            <Setter TargetName="ToolBarThumb" Property="Width" Value="Auto" />
                            <Setter TargetName="ToolBarThumb" Property="Margin" Value="-1,-3,0,0" />
                            <Setter TargetName="ToolBarThumb" Property="Padding" Value="5,6,6,1" />
                            <Setter TargetName="ToolBarHeader" Property="Margin" Value="0,0,0,4" />
                            <Setter TargetName="PART_ToolBarPanel" Property="Margin" Value="1,0,2,2" />
                            <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="OverflowGrid" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="OverflowGrid" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="OverflowPopup" Property="Placement" Value="Right" />
                            <Setter TargetName="MainPanelBorder" Property="Margin" Value="0,0,0,11" />
                            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value=".5" />
                        </Trigger>

                        <Trigger Property="controls:ControlAttach.Status" Value="Light">
                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                        </Trigger>
                        <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                        </Trigger>
                        <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                        </Trigger>
                        <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                            <Setter Property="Foreground" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                        </Trigger>
                        <Trigger Property="controls:ControlAttach.Status" Value="Success">
                            <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
                        </Trigger>
                        <Trigger Property="controls:ControlAttach.Status" Value="Info">
                            <Setter Property="Foreground" Value="{DynamicResource InfoBrush}" />
                        </Trigger>
                        <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                            <Setter Property="Foreground" Value="{DynamicResource WarningBrush}" />
                        </Trigger>
                        <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                            <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                        </Trigger>
                        <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
        BasedOn="{StaticResource AIStudio.Styles.CheckBox}"
        TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="8,0,8,0" />
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style
        x:Key="{x:Static ToolBar.ComboBoxStyleKey}"
        BasedOn="{StaticResource AIStudio.Styles.ComboBox}"
        TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="8,0,8,0" />
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style
        x:Key="{x:Static ToolBar.MenuStyleKey}"
        BasedOn="{StaticResource AIStudio.Styles.Menu}"
        TargetType="{x:Type Menu}">
        <Setter Property="Margin" Value="8,0,8,0" />
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style
        x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
        BasedOn="{StaticResource AIStudio.Styles.RadioButton}"
        TargetType="{x:Type RadioButton}">
        <Setter Property="Margin" Value="8,0,8,0" />
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Separator}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Separator}" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Margin" Value="6,11,6,11" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="Background" Value="{DynamicResource Theme.ShowcaseBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Theme.ShowcaseBrush}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="Background" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="Background" Value="{DynamicResource InfoBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="Background" Value="{DynamicResource WarningBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource WarningBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="Background" Value="{DynamicResource DangerBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Separator}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Separator}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="{x:Static ToolBar.TextBoxStyleKey}"
        BasedOn="{StaticResource AIStudio.Styles.TextBox}"
        TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="8,0,8,0" />
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style
        x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
        BasedOn="{StaticResource AIStudio.Styles.ToggleButton.Switch}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="8,0,8,0" />
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="Button">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="16" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TextBlock.FontWeight" Value="DemiBold" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}" />
        <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background.MouseOver}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="Transparent"
                        CornerRadius="2">
                        <controls:Ripple
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Feedback="{TemplateBinding Foreground}"
                            Focusable="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value=".5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding BorderBrush,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="border" Property="Background" Value="{Binding Background,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent3}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource Theme.ShowcaseBrush}"/>
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource Theme.ShowcaseBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource SuccessBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource InfoBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource InfoBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource WarningBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource WarningBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource DangerBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                <Setter Property="controls:RippleAssist.Feedback" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background.MouseOver}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.ToolBarTray" TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}"/>
    </Style>

</ResourceDictionary>