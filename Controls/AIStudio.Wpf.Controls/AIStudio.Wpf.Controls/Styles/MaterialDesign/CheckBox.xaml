<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:AIStudio.Wpf.Controls"
                    xmlns:converter="clr-namespace:AIStudio.Wpf.Controls.Converter">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Themes/Geometries.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converter:BrushOpacityConverter x:Key="BrushOpacityConverter"/>
    
    <!--AIStudio.Styles.CheckBox-->
    <Style x:Key="AIStudio.Styles.CheckBox" TargetType="CheckBox">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush }" />
        <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="controls:IconAttach.Width" Value="{DynamicResource AIStudio.Icon.Size.Large}"/>
        <Setter Property="controls:IconAttach.Height" Value="{DynamicResource AIStudio.Icon.Size.Large}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Click">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="InteractionEllipse">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="36"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="InteractionEllipse">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="36"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InteractionEllipse">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-18"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="InteractionEllipse">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-18"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardCheckedTrue">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeDashOffset)" Storyboard.TargetName="path">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardCheckedFalse">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeDashOffset)" Storyboard.TargetName="path">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="8"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                        <DockPanel x:Name="templateRoot" SnapsToDevicePixels="True">
                            <Viewbox DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}"
                                 Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:IconAttach.Width)}"
                                 Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:IconAttach.Height)}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 FlowDirection="LeftToRight">
                                <Canvas Width="18" Height="18">
                                    <Grid>
                                        <Border Height="18" Width="18" x:Name="checkBoxBorder" Background="{TemplateBinding Background}" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                                        <Grid Height="18" Width="18" x:Name="markGrid">
                                            <Path UseLayoutRounding="True" x:Name="path" StrokeDashOffset="8" StrokeDashArray="8,8" Width="12" Height="12" Data="{StaticResource CheckedGeometry}" StrokeThickness="2" Stretch="Uniform" Stroke="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(controls:ControlAttach.Foreground)}"/>
                                            <Rectangle x:Name="indeterminateMark" RadiusX="2" RadiusY="2" Fill="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(controls:ControlAttach.BorderBrush)}" Margin="3" Opacity="0"/>
                                        </Grid>
                                    </Grid>
                                    <Ellipse x:Name="InteractionEllipse" Fill="{TemplateBinding Foreground}" Width="0" Height="0" Canvas.Top="9" Canvas.Left="9" Opacity="0" RenderTransformOrigin="0.5,0.5"
                                         IsHitTestVisible="False">
                                        <Ellipse.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Canvas>
                            </Viewbox>
                            <Grid x:Name="padding" DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" Margin="5,0,0,0"></Grid>
                            <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Click}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Visibility" TargetName="contentPresenter" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true"/>
                                <Condition Property="IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value=".8"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false"/>
                                <Condition Property="IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(controls:ControlAttach.BorderBrush)}"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardCheckedTrue}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardCheckedFalse}"/>
                            </Trigger.ExitActions>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(controls:ControlAttach.BorderBrush)}"/>
                            <Setter Property="BorderBrush"  Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(controls:ControlAttach.BorderBrush)}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Stroke" Value="{DynamicResource MaterialDesignTextBoxBorder}" TargetName="path"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(controls:ControlAttach.BorderBrush), Converter={StaticResource BrushOpacityConverter}, ConverterParameter=0.6}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Accent">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource SecondaryHueDarkForegroundBrush }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource SuccessBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource InfoBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource WarningBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource DangerBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignToolForeground }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource MaterialDesignToolBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--AIStudio.Styles.CheckBox-->
    <Style x:Key="AIStudio.Styles.CheckBox.Plain" TargetType="CheckBox">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground }" />
        <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="controls:IconAttach.Width" Value="{DynamicResource AIStudio.Icon.Size.Large}"/>
        <Setter Property="controls:IconAttach.Height" Value="{DynamicResource AIStudio.Icon.Size.Large}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                        <DockPanel x:Name="templateRoot" SnapsToDevicePixels="True">
                            <Viewbox DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}"
                                 Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:IconAttach.Width)}"
                                 Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:IconAttach.Height)}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 FlowDirection="LeftToRight">
                                <Canvas Width="18" Height="18">
                                    <Grid>
                                        <Border Height="18" Width="18" x:Name="checkBoxBorder" Background="{TemplateBinding Background}" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                                        <Grid Height="18" Width="18" x:Name="markGrid">
                                            <Path UseLayoutRounding="True" x:Name="path" Width="12" Height="12" Data="{StaticResource CheckedGeometry}" StrokeThickness="2" Stretch="Uniform" Stroke="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(controls:ControlAttach.BorderBrush)}"/>
                                            <Rectangle x:Name="indeterminateMark" RadiusX="2" RadiusY="2" Fill="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(controls:ControlAttach.Foreground)}" Margin="3" Opacity="0"/>
                                        </Grid>
                                    </Grid>
                                </Canvas>
                            </Viewbox>
                            <Grid x:Name="padding" DockPanel.Dock="{TemplateBinding controls:IconAttach.Dock}" Margin="5,0,0,0"></Grid>
                            <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="padding"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Visibility" TargetName="contentPresenter" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Stroke" TargetName="path" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Stroke" TargetName="path" Value="Transparent"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="path" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(controls:ControlAttach.Foreground)}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Stroke" TargetName="path" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(controls:ControlAttach.BorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter Property="Opacity" TargetName="path" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Accent">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource SecondaryHueDarkForegroundBrush }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource SuccessBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource InfoBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource WarningBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource DangerBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignToolForeground }" />
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource MaterialDesignToolBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>