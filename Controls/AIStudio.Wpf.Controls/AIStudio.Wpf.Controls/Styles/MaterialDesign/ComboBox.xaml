<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"                    
                    xmlns:system="clr-namespace:System;assembly=System.Runtime"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:AIStudio.Wpf.Controls"
                    xmlns:converter="clr-namespace:AIStudio.Wpf.Controls.Converter">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MaterialDesign/ToggleButton.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MaterialDesign/Button.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MaterialDesign/TextBox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MaterialDesign/ValidationErrorTemplate.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <converter:BoolInverseConverter x:Key="BoolInverseConverter"/>
    <converter:ShadowConverter x:Key="ShadowConverter"/>
    <converter:BrushOpacityConverter x:Key="BrushOpacityConverter"/>
    <converter:DoubleToRightMarginConverter x:Key="DoubleToRightMarginConverter"/>
    <converter:GridLengthConverter x:Key="GridLengthConverter"/>

    <!--下拉条目样式-->
    <Style x:Key="AIStudio.Styles.ComboBoxItem" TargetType="ComboBoxItem" >
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <Border x:Name="ItemBackground" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"/>
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="{Binding Path=(controls:ControlAttach.BorderBrush),RelativeSource={RelativeSource AncestorType=ComboBox}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="{Binding Path=(controls:ControlAttach.BorderBrush),RelativeSource={RelativeSource AncestorType=ComboBox}, Converter={StaticResource BrushOpacityConverter}, ConverterParameter=0.6}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--水印：controls:ControlAttach.Watermark-->
    <!--Label区域：controls:ControlAttach.LabelTemplate ，controls:ControlAttach.Label-->
    <!--附加内容区域：controls:ControlAttach.AttachContent-->
    <!--圆角：controls:ControlAttach.CornerRadius-->
    <!--controls:ControlAttach.MouseOverBorderBrush-->
    <!--controls:ControlAttach.FocusBorderBrush-->
    <!--controls:ControlAttach.FocusBackground-->
    <Style x:Key="AIStudio.Styles.ComboBox" TargetType="{x:Type ComboBox}" >
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
        <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource AIStudio.Styles.ComboBoxItem}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MaxDropDownHeight" Value="200" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="controls:ControlAttach.CornerRadius" Value="{DynamicResource DefaultCornerRadius}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="controls:IconAttach.Width" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="controls:IconAttach.Height" Value="{DynamicResource AIStudio.Icon.Size.Small}"/>
        <Setter Property="controls:IconAttach.Geometry" Value="{StaticResource DownGeometry}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource AIStudio.Styles.ValidationErrorTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="PART_Root" >
                        <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding controls:ControlAttach.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}"                                 
                                Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ShadowAttach.DropShadowEffect),Converter={StaticResource ShadowConverter}}"/>

                        <Grid x:Name="PART_InnerGrid" Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource GridLengthConverter},ConverterParameter=2}" />
                            </Grid.ColumnDefinitions>
                            <!--Label区域-->
                            <ContentControl x:Name="Label" Template="{TemplateBinding controls:ControlAttach.LabelTemplate}" IsTabStop="False" IsHitTestVisible="False"
                                            Content="{TemplateBinding controls:ControlAttach.Label}" Margin="1"/>
                            <!--附加内容区域-->
                            <Border x:Name="PART_AttachContent" Panel.ZIndex="2" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" >
                                <ContentControl VerticalAlignment="Center" VerticalContentAlignment="Center" Template="{TemplateBinding controls:ControlAttach.AttachContent}" IsTabStop="False"/>
                            </Border>
                            <!--下拉按钮-->
                            <ToggleButton x:Name="PART_DropDownToggle" 
                                      Grid.ColumnSpan="4"
                                      IsTabStop="False" 
                                      Style="{StaticResource AIStudio.Styles.ComboToggleButton}" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      controls:IconAttach.Width="{Binding Path=(controls:IconAttach.Width), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      controls:IconAttach.Height="{Binding Path=(controls:IconAttach.Height), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      controls:IconAttach.Geometry="{Binding Path=(controls:IconAttach.Geometry), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      IsEnabled="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource BoolInverseConverter},Mode=OneWay}"
                                      Foreground="{TemplateBinding BorderBrush}"/>
                            
                            <!--水印-->
                            <Border Grid.Column="1">
                                <TextBlock x:Name="Message" Visibility="Collapsed"
                                       Text="{TemplateBinding controls:ControlAttach.Watermark}"
                                       Foreground="{TemplateBinding BorderBrush}" IsHitTestVisible="False" Opacity="0.4" Margin="2,0"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <!--主内容区域-->
                            <Grid Grid.Column="1" x:Name="ContentSite">
                                <ContentPresenter x:Name="PART_SelectedItem" 
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Content="{TemplateBinding SelectionBoxItem}" 
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  HorizontalAlignment="Stretch" 
                                                  IsHitTestVisible="False" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <!--文本编辑-->
                                <TextBox x:Name="PART_EditableTextBox" 
                                         Style="{StaticResource AIStudio.Styles.TextBox.ComboBox.Editable}" 
                                         Visibility="Collapsed"                                          
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                         IsHitTestVisible="True"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         HorizontalAlignment="Stretch" 
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                         IsReadOnly="{TemplateBinding IsReadOnly}"                                          
                                         Foreground="{TemplateBinding Foreground}"
                                         SelectionBrush="{TemplateBinding controls:ControlAttach.BorderBrush}"
                                         CaretBrush="{TemplateBinding controls:ControlAttach.BorderBrush}"                                     
                                         FontSize="{TemplateBinding FontSize}"
                                         FontFamily="{TemplateBinding FontFamily}"
                                         Text="{TemplateBinding Text}" 
                                         TextWrapping="NoWrap"/>
                            </Grid>
                        </Grid>

                        <!--弹出下拉控件-->
                        <Popup x:Name="PART_Popup" 
                               AllowsTransparency="True" 
                               Focusable="False" 
                               VerticalOffset="1"    
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" >
                            <Grid MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border x:Name="PopupBorder" 
                                        HorizontalAlignment="Stretch"
                                        Height="Auto"                                        
                                        CornerRadius="{TemplateBinding controls:ControlAttach.CornerRadius}"
                                        Background="{DynamicResource MaterialDesignBackground}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" Margin="1">
                                        <ItemsPresenter x:Name="ItemsPresenter" Margin="2" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <!--1.显示水印-->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <!--编辑模式-->
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_SelectedItem" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_DropDownToggle" Property="Grid.Column" Value="3" />
                            <Setter TargetName="PART_DropDownToggle" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="PART_DropDownToggle" Property="Background" Value="Transparent" />
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_DropDownToggle" Property="Focusable" Value="False" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(controls:ControlAttach.BorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter  Property="BorderBrush" Value="{Binding Path=(controls:ControlAttach.BorderBrush),RelativeSource={RelativeSource Self}}"/>
                            <Setter Property="controls:ShadowAttach.DropShadowEffect" Value="{StaticResource ShadowDepth1}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter  Property="BorderBrush" Value="{Binding Path=(controls:ControlAttach.BorderBrush),RelativeSource={RelativeSource Self}}"/>
                            <Setter Property="controls:ShadowAttach.DropShadowEffect" Value="{StaticResource ShadowDepth1}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignValidationErrorBrush}"/>
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Root" Property="Opacity" Value="0.5"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="controls:ControlAttach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Button x:Name="clear" 
                            Visibility="Collapsed" 
                            Foreground="{Binding Path=(controls:ControlAttach.BorderBrush),RelativeSource={RelativeSource AncestorType=ComboBox}}"
                            Focusable="False"
                            IsTabStop="False" 
                            Style="{StaticResource AIStudio.Styles.Button.Clear}"
                            controls:ControlAttach.ClearTextButton="{Binding Path=(controls:ControlAttach.ClearTextButton),RelativeSource={RelativeSource AncestorType=ComboBox}}" 
                            Command="controls:ControlAttach.ClearTextCommand" 
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ComboBox}}}" />
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                                <Condition Binding="{Binding Path=(controls:ControlAttach.ClearTextButton), RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="clear" Property="Visibility" Value="Visible"></Setter>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Null}">
                            <Setter TargetName="clear" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="">
                            <Setter TargetName="clear" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource SuccessBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource InfoBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource WarningBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource DangerBrush}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="controls:ControlAttach.BorderBrush" Value="{DynamicResource MaterialDesignToolForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.ComboBox.Virtualized"
           BasedOn="{StaticResource AIStudio.Styles.ComboBox}"
           TargetType="{x:Type ComboBox}">
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizingWhenGrouping" Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
    </Style>


    <!--ComboBox包含附加属性Label的样式 AIStudio.Styles.ComboBox.Label -->
    <Style x:Key="AIStudio.Styles.ComboBox.Label" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource AIStudio.Styles.ComboBox}">
        <Setter Property="Width" Value="260"></Setter>
        <Setter Property="controls:ControlAttach.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <TextBlock VerticalAlignment="Center" Margin="{Binding Path=Padding,RelativeSource={RelativeSource AncestorType=ComboBox},Converter={StaticResource ThicknessBindingConverter},ConverterParameter={x:Static converter:ThicknessSideType.OnlyRight}}" Text="{Binding Path=(controls:ControlAttach.Label),RelativeSource={RelativeSource AncestorType=ComboBox}}"></TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox包含清除Text按钮的样式 AIStudio.Styles.ComboBox.Underline -->
    <!--水印：controls:ControlAttach.Watermark-->
    <!--Label区域：controls:ControlAttach.LabelTemplate ，controls:ControlAttach.Label-->
    <!--附加内容区域：controls:ControlAttach.AttachContent-->
    <!--圆角：controls:ControlAttach.CornerRadius-->
    <!--controls:ControlAttach.MouseOverBorderBrush-->
    <!--controls:ControlAttach.FocusBorderBrush-->
    <!--controls:ControlAttach.FocusBackground-->
    <Style x:Key="AIStudio.Styles.ComboBox.Underline" TargetType="{x:Type ComboBox}"  BasedOn="{StaticResource AIStudio.Styles.ComboBox}">
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="controls:ControlAttach.CornerRadius" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding controls:ControlAttach.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                        <Grid x:Name="PART_InnerGrid" Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="{Binding Path=(controls:IconAttach.Width),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource GridLengthConverter},ConverterParameter=2}" />
                            </Grid.ColumnDefinitions>
                            <!--Label区域-->
                            <ContentControl x:Name="Label" Template="{TemplateBinding controls:ControlAttach.LabelTemplate}" IsTabStop="False" IsHitTestVisible="False"
                                            Content="{TemplateBinding controls:ControlAttach.Label}" Margin="1"/>
                            <!--附加内容区域-->
                            <Border x:Name="PART_AttachContent" Panel.ZIndex="2" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" >
                                <ContentControl VerticalAlignment="Center" VerticalContentAlignment="Center" Template="{TemplateBinding controls:ControlAttach.AttachContent}" IsTabStop="False"/>
                            </Border>
                            <!--下拉按钮-->
                            <ToggleButton x:Name="PART_DropDownToggle" 
                                      Grid.ColumnSpan="4"
                                      IsTabStop="False" 
                                      Style="{StaticResource AIStudio.Styles.ComboToggleButton}" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      controls:IconAttach.Width="{Binding Path=(controls:IconAttach.Width), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      controls:IconAttach.Height="{Binding Path=(controls:IconAttach.Height), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      controls:IconAttach.Geometry="{Binding Path=(controls:IconAttach.Geometry), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      IsEnabled="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource BoolInverseConverter},Mode=OneWay}"
                                      Foreground="{TemplateBinding BorderBrush}"/>
                            <!--水印-->
                            <Border Grid.Column="1">
                                <TextBlock x:Name="Message" Visibility="Collapsed"
                                       Text="{TemplateBinding controls:ControlAttach.Watermark}"
                                       Foreground="{TemplateBinding BorderBrush}" IsHitTestVisible="False" Opacity="0.4" Margin="2,0"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <!--主内容区域-->
                            <Grid Grid.Column="1" x:Name="ContentSite">
                                <ContentPresenter x:Name="PART_SelectedItem" 
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Content="{TemplateBinding SelectionBoxItem}" 
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  HorizontalAlignment="Stretch" 
                                                  IsHitTestVisible="False" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <!--文本编辑-->
                                <TextBox x:Name="PART_EditableTextBox" 
                                         Style="{StaticResource AIStudio.Styles.TextBox.ComboBox.Editable}" 
                                         Visibility="Collapsed"                                          
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                         IsHitTestVisible="True"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         HorizontalAlignment="Stretch" 
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                         IsReadOnly="{TemplateBinding IsReadOnly}"                                          
                                         Foreground="{TemplateBinding Foreground}"
                                         SelectionBrush="{TemplateBinding controls:ControlAttach.BorderBrush}"
                                         CaretBrush="{TemplateBinding controls:ControlAttach.BorderBrush}"                                     
                                         FontSize="{TemplateBinding FontSize}"
                                         FontFamily="{TemplateBinding FontFamily}"
                                         Text="{TemplateBinding Text}" 
                                         TextWrapping="NoWrap"/>
                            </Grid>

                        </Grid>
                        <!--弹出下拉控件-->
                        <Popup x:Name="PART_Popup" 
                               AllowsTransparency="True" 
                               Focusable="False" 
                               VerticalOffset="1"    
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" >
                            <Grid MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border x:Name="PopupBorder" 
                                        HorizontalAlignment="Stretch"
                                        Height="Auto"                                        
                                        CornerRadius="{TemplateBinding controls:ControlAttach.CornerRadius}"
                                        Background="{DynamicResource MaterialDesignBackground}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" Margin="1">
                                        <ItemsPresenter x:Name="ItemsPresenter" Margin="2" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>

                        <controls:Underline x:Name="Underline" IsTabStop="False" Background="{TemplateBinding controls:ControlAttach.BorderBrush}"/>
                    </Grid>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <!--1.显示水印-->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <!--编辑模式-->
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_SelectedItem" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_DropDownToggle" Property="Grid.Column" Value="3" />
                            <Setter TargetName="PART_DropDownToggle" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="PART_DropDownToggle" Property="Background" Value="Transparent" />
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_DropDownToggle" Property="Focusable" Value="False" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(controls:ControlAttach.BorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Underline" Property="IsActive" Value="True"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter  Property="BorderBrush" Value="{Binding Path=(controls:ControlAttach.BorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter  Property="BorderBrush" Value="{Binding Path=(controls:ControlAttach.BorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignValidationErrorBrush}"/>
                            <Setter TargetName="Underline" Property="Background" Value="{DynamicResource MaterialDesignValidationErrorBrush}"/>
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Root" Property="Opacity" Value="0.5"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>