<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:controls="clr-namespace:AIStudio.Wpf.Controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:AIStudio.Wpf.Controls.Converter">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Themes/Shadows.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converter:BrushRoundConverter x:Key="BrushRoundConverter" />

    <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
        <Border Background="{DynamicResource MaterialDesignBackground}"
                BorderBrush="{DynamicResource MaterialDesignTextBoxBorder}"
                BorderThickness="1">
            <ContentPresenter />
        </Border>
    </ControlTemplate>

    <Style x:Key="AIStudio.Styles.RepeatButton.MenuScroll"
           BasedOn="{x:Null}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel Background="Transparent" SnapsToDevicePixels="True">
                        <Rectangle x:Name="R1"
                                   Width="1"
                                   DockPanel.Dock="Right"
                                   Fill="Transparent" />
                        <Rectangle x:Name="B1"
                                   Height="1"
                                   DockPanel.Dock="Bottom"
                                   Fill="Transparent" />
                        <Rectangle x:Name="L1"
                                   Width="1"
                                   DockPanel.Dock="Left"
                                   Fill="Transparent" />
                        <Rectangle x:Name="T1"
                                   Height="1"
                                   DockPanel.Dock="Top"
                                   Fill="Transparent" />
                        <ContentPresenter x:Name="ContentContainer"
                                          Margin="6"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter TargetName="L1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            <Setter TargetName="R1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter TargetName="T1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}"
           BasedOn="{x:Null}"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <RepeatButton Grid.Row="0"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="False"
                                      Style="{StaticResource AIStudio.Styles.RepeatButton.MenuScroll}">
                            <RepeatButton.Visibility>
                                <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="0"
                                              FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource UpArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                        </RepeatButton>
                        <RepeatButton Grid.Row="2"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="False"
                                      Style="{StaticResource AIStudio.Styles.RepeatButton.MenuScroll}">
                            <RepeatButton.Visibility>
                                <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100"
                                              FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource DownArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplate, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Border x:Name="templateRoot"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" />

            <Border x:Name="BackgroundRoot"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding controls:ControlAttach.Background}"
                        SnapsToDevicePixels="True"
                        Opacity="0" />
            <controls:Ripple Background="Transparent"
                            Focusable="False"
                            Feedback="{TemplateBinding controls:ControlAttach.Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                <DockPanel>
                    <ContentPresenter x:Name="Icon"
                                  Margin="4 0 6 0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <Path x:Name="GlyphPanel"
                      Margin="8 0 0 0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Width="{TemplateBinding FontSize}"
                      Height="{TemplateBinding FontSize}"
                      Stretch="Fill"
                      Fill="{TemplateBinding Foreground}"
                      Data="{StaticResource Checkmark}"
                      FlowDirection="LeftToRight"
                      Visibility="Collapsed" />
                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
                </DockPanel>
            </controls:Ripple>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="True"
                   Focusable="False"
                   HorizontalOffset="1"
                   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                   VerticalOffset="-2">
                <Grid>
                    <ContentControl x:Name="SubMenuBorder"
                                    IsTabStop="False"
                                    Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                        <Grid>
                            <Rectangle x:Name="LayoutRoot" Fill="{DynamicResource MaterialDesignBackground}" />
                            <ScrollViewer x:Name="SubMenuScrollViewer"
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                      CanContentScroll="True">
                                <ItemsPresenter x:Name="ItemsPresenter"
                                            Margin="0"
                                            Grid.IsSharedSizeScope="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Grid>
                    </ContentControl>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                <Setter TargetName="LayoutRoot" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Opacity="0.3"
                                          BlurRadius="4"
                                          Direction="315"
                                          ShadowDepth="2"
                                          Color="{DynamicResource ShadowColor}" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="SubMenuBorder" Property="Margin" Value="0 0 6 6" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="BackgroundRoot" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="BackgroundRoot" Property="Opacity" Value="0.12" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="BackgroundRoot" Property="Opacity" Value="0.12" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=LeftTopLevelHeaderTemplate, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Border x:Name="templateRoot"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" />

            <Border x:Name="BackgroundRoot"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding controls:ControlAttach.Background}"
                        SnapsToDevicePixels="True"
                        Opacity="0" />
            <controls:Ripple Background="Transparent"
                            Focusable="False"
                            Feedback="{TemplateBinding controls:ControlAttach.Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                <DockPanel>
                    <ContentPresenter x:Name="Icon"
                                  Margin="4 0 6 0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"/>
                    <Path x:Name="GlyphPanel"
                      Margin="8 0 0 0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Width="{TemplateBinding FontSize}"
                      Height="{TemplateBinding FontSize}"
                      Stretch="Fill"
                      Fill="{TemplateBinding Foreground}"
                      Data="{StaticResource Checkmark}"
                      FlowDirection="LeftToRight"
                      Visibility="Collapsed" />
                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"/>
                </DockPanel>
            </controls:Ripple>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="True"
                   Focusable="False"
                   HorizontalOffset="1"
                   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Right"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                   VerticalOffset="-1">
                <Grid>
                    <ContentControl x:Name="SubMenuBorder"
                                    IsTabStop="False"
                                    Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                        <Grid>
                            <Rectangle x:Name="LayoutRoot" Fill="{DynamicResource MaterialDesignBackground}" />
                            <ScrollViewer x:Name="SubMenuScrollViewer"
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                      CanContentScroll="True">
                                <ItemsPresenter x:Name="ItemsPresenter"
                                            Margin="0"
                                            Grid.IsSharedSizeScope="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Grid>
                    </ContentControl>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                <Setter TargetName="LayoutRoot" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Opacity="0.3"
                                          BlurRadius="4"
                                          Direction="315"
                                          ShadowDepth="2"
                                          Color="{DynamicResource ShadowColor}" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="SubMenuBorder" Property="Margin" Value="0 0 6 6" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="BackgroundRoot" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="BackgroundRoot" Property="Opacity" Value="0.12" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="BackgroundRoot" Property="Opacity" Value="0.12" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplate, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Border x:Name="templateRoot"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" />

            <Border x:Name="BackgroundRoot"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding controls:ControlAttach.Background}"
                        SnapsToDevicePixels="True"
                        Opacity="0" />
            <controls:Ripple Background="Transparent"
                            Focusable="False"
                            Feedback="{TemplateBinding controls:ControlAttach.Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                <DockPanel>
                    <ContentPresenter x:Name="Icon"
                                  Margin="4 0 6 0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  />
                    <Path x:Name="GlyphPanel"
                      Margin="8 0 0 0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Width="{TemplateBinding FontSize}"
                      Height="{TemplateBinding FontSize}"
                      Stretch="Fill"
                      Fill="{TemplateBinding Foreground}"
                      Data="{StaticResource Checkmark}"
                      FlowDirection="LeftToRight"
                      Visibility="Collapsed" />
                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"/>
                </DockPanel>
            </controls:Ripple>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="BackgroundRoot" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="BackgroundRoot" Property="Opacity" Value="0.12" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplate, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Border x:Name="templateRoot"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" />

            <Border x:Name="BackgroundRoot"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding controls:ControlAttach.Background}"
                        SnapsToDevicePixels="True"
                        Opacity="0" />
            <controls:Ripple Background="Transparent"
                            Focusable="False"
                            Feedback="{TemplateBinding controls:ControlAttach.Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                        <ColumnDefinition Width="4" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="6" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                        <ColumnDefinition Width="17" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"/>
                    <Path x:Name="GlyphPanel"
                      Margin="5 0 0 0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Width="{TemplateBinding FontSize}"
                      Height="{TemplateBinding FontSize}"
                      Stretch="Fill"
                      Fill="{TemplateBinding Foreground}"
                      Data="{StaticResource Checkmark}"
                      FlowDirection="LeftToRight"
                      Visibility="Collapsed" />
                    <ContentPresenter Grid.Column="2"
                                  Margin="{TemplateBinding Padding}"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
                    <TextBlock Grid.Column="4"
                           Margin="{TemplateBinding Padding}"
                           Text="{TemplateBinding InputGestureText}"
                           Visibility="Collapsed" />
                    <Path Grid.Column="5"
                      Margin="4 0 0 0"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding Foreground}"
                      Data="{StaticResource RightArrow}" />
                </Grid>
            </controls:Ripple>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="True"
                   Focusable="False"
                   HorizontalOffset="1"
                   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Right"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                   VerticalOffset="-1">
                <Grid>

                    <ContentControl x:Name="SubMenuBorder"
                                    IsTabStop="False"
                                    Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                        <Grid>
                            <Rectangle x:Name="LayoutRoot" Fill="{DynamicResource MaterialDesignBackground}" />
                            <ScrollViewer x:Name="SubMenuScrollViewer"
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                      CanContentScroll="True">
                                <ItemsPresenter x:Name="ItemsPresenter"
                                            Margin="0"
                                            Grid.IsSharedSizeScope="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Grid>
                    </ContentControl>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                <Setter TargetName="LayoutRoot" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Opacity="0.3"
                                          BlurRadius="4"
                                          Direction="315"
                                          ShadowDepth="2"
                                          Color="{DynamicResource ShadowColor}" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="SubMenuBorder" Property="Margin" Value="0 0 6 6" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="BackgroundRoot" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplate, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Border x:Name="templateRoot"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" />

            <Border x:Name="BackgroundRoot"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding controls:ControlAttach.Background}"
                        SnapsToDevicePixels="True"
                        Opacity="0" />
            <controls:Ripple Background="Transparent"
                            Focusable="False"
                            Feedback="{TemplateBinding controls:ControlAttach.Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                        <ColumnDefinition Width="4" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="6" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                        <ColumnDefinition Width="17" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"/>
                    <Path x:Name="GlyphPanel"
                      Margin="5 0 0 0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Width="{TemplateBinding FontSize}"
                      Height="{TemplateBinding FontSize}"
                      Stretch="Fill"
                      Fill="{TemplateBinding Foreground}"
                      Data="{StaticResource Checkmark}"
                      FlowDirection="LeftToRight"
                      Visibility="Collapsed" />
                    <ContentPresenter Grid.Column="2"
                                  Margin="{TemplateBinding Padding}"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"/>
                    <TextBlock Grid.Column="4"
                           Margin="{TemplateBinding Padding}"
                           Text="{TemplateBinding InputGestureText}" />
                </Grid>
            </controls:Ripple>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="BackgroundRoot" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="AIStudio.Styles.MenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplate, TypeInTargetAssembly={x:Type MenuItem}}}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplate, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplate, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplate, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplate, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.MenuItem.Custom" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource AIStudio.Styles.MenuItem}">
        <Setter Property="MenuItem.Icon" Value="{x:Null}"/>
        <!--<Setter Property="MenuItem.Header" Value="{Binding Header}"/>-->
        <Setter Property="MenuItem.Command" Value="{Binding Command}"/>
        <Setter Property="MenuItem.CommandParameter" Value="{Binding .}"/>
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <!-- insert a null in ItemsSource if you want a separator -->
            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate>
                            <Separator Style="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
                <Setter Property="MenuItem.Icon" Value="{x:Null}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.Menu" TargetType="{x:Type Menu}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="FontSize" Value="{DynamicResource AIStudio.Font.Size}"/>
        <Setter Property="FontFamily" Value="{DynamicResource AIStudio.Font.FontFamily}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource AIStudio.Styles.MenuItem}" TargetType="{x:Type MenuItem}">
                    <Setter Property="controls:ControlAttach.Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground),RelativeSource={RelativeSource AncestorType=Menu}}" />
                    <Setter Property="controls:ControlAttach.Background" Value="{Binding Path=(controls:ControlAttach.Background),RelativeSource={RelativeSource AncestorType=Menu}}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ItemsPresenter Margin="0,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Accent">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource SecondaryHueMidBrush}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource InfoBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource WarningBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource DangerBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource MaterialDesignToolBackground}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignToolForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.MenuItem.Left" TargetType="{x:Type MenuItem}">
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplate, TypeInTargetAssembly={x:Type MenuItem}}}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=LeftTopLevelHeaderTemplate, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplate, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplate, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplate, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.MenuItem.Left.Custom" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource AIStudio.Styles.MenuItem.Left}">
        <Setter Property="MenuItem.Icon" Value="{x:Null}"/>
        <!--<Setter Property="MenuItem.Header" Value="{Binding Header}"/>-->
        <Setter Property="MenuItem.Command" Value="{Binding Command}"/>
        <Setter Property="MenuItem.CommandParameter" Value="{Binding .}"/>
        <Setter Property="BorderThickness" Value="0" />       
        <Style.Triggers>
            <!-- insert a null in ItemsSource if you want a separator -->
            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate>
                            <Separator Style="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
                <Setter Property="MenuItem.Icon" Value="{x:Null}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.Menu.Left" TargetType="{x:Type Menu}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource AIStudio.Styles.MenuItem.Left}" TargetType="{x:Type MenuItem}">
                    <Setter Property="controls:ControlAttach.Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}" />
                    <Setter Property="controls:ControlAttach.Background" Value="{Binding Path=(controls:ControlAttach.Background),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ItemsPresenter Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Accent">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource SecondaryHueMidBrush}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource InfoBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource WarningBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource DangerBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource MaterialDesignToolBackground}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignToolForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>