<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:controls="clr-namespace:AIStudio.Wpf.Controls"
                    xmlns:converter="clr-namespace:AIStudio.Wpf.Controls.Converter"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Themes/Geometries.xaml" />
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.Controls;component/Styles/MaterialDesign/ToggleButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converter:BrushOpacityConverter x:Key="BrushOpacityConverter"/>
    <converter:TreeViewMarginConverter x:Key="TreeViewMarginConverter" Length="12" />
    <converter:TreeViewLineConverter x:Key="TreeViewLineConverter"/>
    <converter:TreeViewFirstLineConverter x:Key="TreeViewFirstLineConverter"/>
    <converter:GridLengthConverter x:Key="GridLengthConverter"/>
    <converter:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter"/>
    <converter:BrushRoundConverter x:Key="BrushRoundConverter" />

    <Style x:Key="AIStudio.Styles.TreeViewItem" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Border x:Name="Bd"
                                    MinHeight="{TemplateBinding MinHeight}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    UseLayoutRounding="True">
                            <Grid Margin="{Binding Converter={StaticResource TreeViewMarginConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="Expander"
                                              Style="{StaticResource AIStudio.Styles.TreeToggleButton}"
                                              Foreground="{TemplateBinding Foreground}"
                                              ClickMode="Press"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}" />
                                <controls:Ripple Grid.Column="1"
                                                Focusable="False"   
                                                Padding="{TemplateBinding Padding}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ContentPresenter x:Name="PART_Header"                                                  
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </controls:Ripple>
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>

                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground), RelativeSource={RelativeSource Mode=Self}}" />
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BrushOpacityConverter},ConverterParameter=0.6}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground), RelativeSource={RelativeSource Mode=Self}}" />
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing"
                     Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.TreeViewItem.Classic" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Border x:Name="Bd"
                                    MinHeight="{TemplateBinding MinHeight}"                                   
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    UseLayoutRounding="True">
                            <Grid Margin="{Binding Converter={StaticResource TreeViewMarginConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" MinWidth="19" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="Expander" Grid.Column="0" Grid.ColumnSpan="2" 
                                                  Style="{StaticResource AIStudio.Styles.ComboToggleButton}"
                                                  controls:IconAttach.Geometry="{StaticResource FillUpGeometry}"
                                                  Margin="0,0,5,0"
                                                  Foreground="{TemplateBinding Foreground}"                                              
                                                  IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}" />
                                <controls:Ripple Focusable="False"   
                                             Padding="{TemplateBinding Padding}"
                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                             Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ContentPresenter x:Name="PART_Header" 
                                                  Grid.Column="0"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </controls:Ripple>
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                            <ItemsPresenter.LayoutTransform>
                                <ScaleTransform ScaleY="0" ScaleX="1"/>
                            </ItemsPresenter.LayoutTransform>
                        </ItemsPresenter>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3"
                                                         Storyboard.TargetName="ItemsHost"
                                                         Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3"
                                                         Storyboard.TargetName="ItemsHost"
                                                         Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>

                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground), RelativeSource={RelativeSource Mode=Self}}" />
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BrushOpacityConverter},ConverterParameter=0.6}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground), RelativeSource={RelativeSource Mode=Self}}" />
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing"
                     Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.TreeViewItem.Modern" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Border x:Name="Bd"
                                        MinHeight="{TemplateBinding MinHeight}"                                   
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        UseLayoutRounding="True">
                            <Grid>
                                <Rectangle x:Name="Rect" Width="3" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BrushOpacityConverter},ConverterParameter=0.12}" HorizontalAlignment="Left" />

                                <Grid Margin="{Binding Converter={StaticResource TreeViewMarginConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" MinWidth="19" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander"  Grid.Column="0" Grid.ColumnSpan="3" 
                                                  Style="{StaticResource AIStudio.Styles.ComboToggleButton}"
                                                  controls:IconAttach.Geometry="{StaticResource FillUpGeometry}"
                                                  Margin="0,0,5,0"
                                                  Foreground="{TemplateBinding Foreground}"                                              
                                                  IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}" />
                                    <controls:Ripple Focusable="False" Grid.Column="1"
                                                 Padding="{TemplateBinding Padding}"
                                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                 Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <ContentPresenter x:Name="PART_Header" 
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </controls:Ripple>
                                </Grid>
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                            <ItemsPresenter.LayoutTransform>
                                <ScaleTransform ScaleY="0" ScaleX="1"/>
                            </ItemsPresenter.LayoutTransform>
                        </ItemsPresenter>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3"
                                                         Storyboard.TargetName="ItemsHost"
                                                         Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3"
                                                         Storyboard.TargetName="ItemsHost"
                                                         Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>

                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BrushOpacityConverter},ConverterParameter=0.12}" />
                            <Setter TargetName="Rect" Property="Fill" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BrushOpacityConverter},ConverterParameter=0.6}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Rect" Property="Fill" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Rect" Property="Fill" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing"
                     Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.TreeViewItem.Chain" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid VerticalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Name="Bd" 
                                        Grid.Column="0" Grid.ColumnSpan="3" 
                                        Background="{TemplateBinding Background}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Padding="{TemplateBinding Padding}" 
                                        MinHeight="{TemplateBinding MinHeight}"
                                        UseLayoutRounding="True"/>

                        <!-- Connecting Lines -->
                        <Rectangle x:Name="HorLn" Margin="10,0,0,0" Height="1" Stroke="{TemplateBinding Foreground}" UseLayoutRounding="True"/>
                        <Rectangle x:Name="VerLn" Width="1" Stroke="{TemplateBinding Foreground}" Margin="0,0,0,0" Grid.RowSpan="2" UseLayoutRounding="True"/>

                        <ToggleButton x:Name="Expander" Padding="1" BorderThickness="1" 
                                              Style="{DynamicResource AIStudio.Styles.ToggleButton.Icon}" 
                                              controls:IconAttach.GeometrySelected="{StaticResource SubGeometry}" 
                                              controls:IconAttach.Geometry="{StaticResource AddGeometry}" 
                                              controls:IconAttach.Width="10"
                                              controls:IconAttach.Height="10"
                                              Width="15"
                                              Height="15"
                                              Foreground="{TemplateBinding Foreground}"
                                              Background="{TemplateBinding Background}"
                                              controls:ControlAttach.Background="{TemplateBinding controls:ControlAttach.Background}"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                              ClickMode="Press"
                                              VerticalAlignment="Center"
                                              UseLayoutRounding="True"/>

                        <Rectangle Grid.Column="2" Height="1" Stroke="{TemplateBinding Foreground}" Width="{Binding Path=Padding, RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource ThicknessToDoubleConverter}}" UseLayoutRounding="True" HorizontalAlignment="Left"/>
                        <Border x:Name="ContentBorder" Grid.Column="1" Grid.ColumnSpan="2" Padding="{TemplateBinding Padding}" MinHeight="{TemplateBinding MinHeight}" UseLayoutRounding="True">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>



                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- This trigger changes the connecting lines if the item is the last in the list -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource TreeViewLineConverter}}" Value="true">
                            <Setter TargetName="VerLn" Property="Height" Value="13"/>
                            <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                        </DataTrigger>
                        <!-- This trigger changes the connecting lines if the item is the first in the list -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource TreeViewFirstLineConverter}}" Value="true">
                            <Setter TargetName="VerLn" Property="Margin" Value="0,13,0,0"/>
                        </DataTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger SourceName="Expander" Property="IsMouseOver" Value="True">                         
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BrushOpacityConverter},ConverterParameter=0.6}" />
                        </Trigger>
                        <Trigger SourceName="ContentBorder" Property="IsMouseOver" Value="True">                         
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BrushOpacityConverter},ConverterParameter=0.6}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">                          
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{Binding Path=(controls:ControlAttach.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing"
                     Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.TreeView" TargetType="{x:Type TreeView}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <!--  default to 0  -->
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer x:Name="TreeViewScrollViewer"
                                      Padding="{TemplateBinding Padding}"
                                      CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(controls:TreeViewAttach.ControlStyle),RelativeSource={RelativeSource Mode=Self}}" Value="Standard">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style BasedOn="{StaticResource AIStudio.Styles.TreeViewItem}" TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Foreground" Value="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="Background" Value="{Binding Background,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="controls:ControlAttach.Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                            <Setter Property="controls:ControlAttach.Background" Value="{Binding Path=(controls:ControlAttach.Background),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(controls:TreeViewAttach.ControlStyle),RelativeSource={RelativeSource Mode=Self}}" Value="Classic">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style BasedOn="{StaticResource AIStudio.Styles.TreeViewItem.Classic}" TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Foreground" Value="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="Background" Value="{Binding Background,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="controls:ControlAttach.Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                            <Setter Property="controls:ControlAttach.Background" Value="{Binding Path=(controls:ControlAttach.Background),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(controls:TreeViewAttach.ControlStyle),RelativeSource={RelativeSource Mode=Self}}" Value="Modern">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style BasedOn="{StaticResource AIStudio.Styles.TreeViewItem.Modern}" TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Foreground" Value="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="Background" Value="{Binding Background,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="controls:ControlAttach.Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                            <Setter Property="controls:ControlAttach.Background" Value="{Binding Path=(controls:ControlAttach.Background),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(controls:TreeViewAttach.ControlStyle),RelativeSource={RelativeSource Mode=Self}}" Value="Chain">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style BasedOn="{StaticResource AIStudio.Styles.TreeViewItem.Chain}" TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Foreground" Value="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="Background" Value="{Binding Background,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                            <Setter Property="controls:ControlAttach.Foreground" Value="{Binding Path=(controls:ControlAttach.Foreground),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                            <Setter Property="controls:ControlAttach.Background" Value="{Binding Path=(controls:ControlAttach.Background),RelativeSource={RelativeSource AncestorType=TreeView},Mode=OneWay}" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <Trigger Property="controls:ControlAttach.Status" Value="Light">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Mid">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Dark">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Secondary">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource SecondaryHueMidBrush}"/>
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground}"/>
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Success">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Info">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource InfoBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Warning">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource WarningBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Danger">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource DangerBrush}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignBackground}" />
            </Trigger>
            <Trigger Property="controls:ControlAttach.Status" Value="Plain">
                <Setter Property="controls:ControlAttach.Background" Value="{DynamicResource MaterialDesignToolBackground}" />
                <Setter Property="controls:ControlAttach.Foreground" Value="{DynamicResource MaterialDesignToolForeground}" />
            </Trigger>

            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray9}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.TreeView.Virtualised"
           BasedOn="{StaticResource AIStudio.Styles.TreeView}"
           TargetType="{x:Type TreeView}">
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
    </Style>

    <Style x:Key="AIStudio.Styles.TreeViewItem.Menu" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="MinHeight" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Grid x:Name="Root_Grid" Background="Transparent">
                            <Grid x:Name="PART_Background" Background="{TemplateBinding Foreground}" Opacity="0" />
                            <Border x:Name="Bd" Opacity="0.75"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <controls:Ripple Focusable="False" 
                                         Padding="{TemplateBinding Padding}" 
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                         Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Grid Margin="{Binding Converter={StaticResource TreeViewMarginConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" MinWidth="19" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter x:Name="PART_Header"
                                                  Grid.Column="0"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <ToggleButton x:Name="Expander"  Grid.Column="1"
                                              Style="{StaticResource AIStudio.Styles.ComboToggleButton}"
                                              controls:IconAttach.Geometry="{StaticResource FillUpGeometry}"
                                              Margin="0,0,5,0"
                                              Foreground="{TemplateBinding Foreground}"
                                              ClickMode="Press"
                                              IsHitTestVisible="False"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}" />
                                    </Grid>
                                </controls:Ripple>
                            </Border>
                        </Grid>
                        <ItemsPresenter x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                            <ItemsPresenter.LayoutTransform>
                                <ScaleTransform ScaleY="0" ScaleX="1"/>
                            </ItemsPresenter.LayoutTransform>
                        </ItemsPresenter>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>-->
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3"
                                                         Storyboard.TargetName="ItemsHost"
                                                         Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3"
                                                         Storyboard.TargetName="ItemsHost"
                                                         Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>

                        <Trigger SourceName="Root_Grid" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Background" Property="Opacity" Value="0.3" />
                            <Setter TargetName="Bd" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Background" Property="Opacity" Value="0.2" />
                            <Setter TargetName="Bd" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Background" Property="Opacity" Value="0.35" />
                            <Setter TargetName="Bd" Property="Opacity" Value="1" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.TreeView.Menu" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignBody}" />
        <!--  default to 0  -->
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource AIStudio.Styles.TreeViewItem.Menu}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="controls:TreeViewAttach.ExpandBehaviour" Value="OnlyOne"/>
        <Setter Property="controls:TreeViewAttach.ExpandMode" Value="SingleClick"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer x:Name="TreeViewScrollViewer"
                                      Padding="{TemplateBinding Padding}"
                                      CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray9}" />
            </Trigger>
        </Style.Triggers>
    </Style> 

</ResourceDictionary>