<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:AIStudio.Wpf.GridControls"
                    xmlns:converter="clr-namespace:AIStudio.Wpf.GridControls.Converters"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:vw="clr-namespace:AIStudio.Wpf.GridControls.View"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AIStudio.Wpf.GridControls;component/Controls/RangeSlider/Range_Slider.xaml"/>
    </ResourceDictionary.MergedDictionaries>


    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converter:FilterControlVmToVisibilityConverter x:Key="FilterControlVmToVisibilityConverter" />
    <converter:SimplePropertyConverter x:Key="SimplePropertyConverter" />
    <converter:DateTimeDoubleConverter x:Key="DateTimeDoubleConverter"/>

    <DrawingBrush x:Key="FilterButtonDisable" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M 0,0 L 3.5,4 L 7,0 Z">
                    <GeometryDrawing.Brush>
                        <SolidColorBrush Color="{StaticResource MahApps.Colors.SystemChromeDisabledLow}" />
                    </GeometryDrawing.Brush>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
        <!--    -->
    </DrawingBrush>
    <DrawingBrush x:Key="FilterButtonEnable" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M 0,0 L 3.5,4 L 7,0 Z">
                    <GeometryDrawing.Brush>
                        <SolidColorBrush Color="{DynamicResource MahApps.Colors.ThemeBackground}"/>
                    </GeometryDrawing.Brush>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="FilterButtonMouseOver" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M 0,0 L 3.5,4 L 7,0 Z">
                    <GeometryDrawing.Brush>
                        <SolidColorBrush Color="{DynamicResource MahApps.Colors.Gray3}"/>
                    </GeometryDrawing.Brush>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="FilterButtonActive" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{DynamicResource MahApps.Brushes.Accent}" Geometry="F1 M 6,15L 6,11">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource MahApps.Brushes.Accent}"
								EndLineCap="Square"
								LineJoin="Bevel"
								StartLineCap="Square"
								Thickness="2" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,7L 6,11L 10,7">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource MahApps.Brushes.Accent}"
								EndLineCap="Round"
								LineJoin="Round"
								StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Brush="{DynamicResource MahApps.Brushes.Accent}" Geometry="F1 M 2,5L 6,9L 10,5">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource MahApps.Brushes.Accent}"
								EndLineCap="Round"
								LineJoin="Round"
								StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="FilterButtonOpenPressed" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="F1 M 6,15L 6,11">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource MahApps.Brushes.AccentBase}"
                             EndLineCap="Square"
                             LineJoin="Bevel"
                             StartLineCap="Square"
                             Thickness="2" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,7L 6,11L 10,7">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource MahApps.Brushes.AccentBase}"
                             EndLineCap="Round"
                             LineJoin="Round"
                             StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,5L 6,9L 10,5">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource MahApps.Brushes.AccentBase}"
                             EndLineCap="Round"
                             LineJoin="Round"
                             StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="FilterButtonOpen" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{DynamicResource MahApps.Brushes.Gray2}" Geometry="F1 M 6,15L 6,11">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource MahApps.Brushes.Gray2}"
								EndLineCap="Square"
								LineJoin="Bevel"
								StartLineCap="Square"
								Thickness="2" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,7L 6,11L 10,7">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource MahApps.Brushes.Gray2}"
								EndLineCap="Round"
								LineJoin="Round"
								StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,5L 6,9L 10,5">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource MahApps.Brushes.Gray2}"
								EndLineCap="Round"
								LineJoin="Round"
								StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="Clear" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{DynamicResource MahApps.Brushes.ThemeForeground}" Geometry="M 1,2C 3.33333,3.33333 5.66667,4.66667 7.66667,6.66667C 9.66667,8.66666 11.3333,11.3333 12.1667,12.6667L 13,14M 1,15C 3,12 5,9 7.33333,6.66667C 9.66667,4.33333 12.3333,2.66667 13.6667,1.83333L 15,1" />
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <!--  border style  -->
    <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
    </Style>

    <!--  Text block style for displaying the filter type  -->
    <Style x:Key="FilterNameStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="Text" Value="Filter" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="2" />
    </Style>
    <Style x:Key="ColumnHeaderButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <!--<Border Background="Transparent" BorderBrush="#FF85CBEB" BorderThickness="2" CornerRadius="3" Width="Auto" Height="Auto"/>-->
                        <ContentPresenter Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Content="{TemplateBinding Content}"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{x:Null}" />
    </Style>

    <Style x:Key="FilterClearButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="#00000000"
                            BorderThickness="1,1,1,1"
                            Padding="2">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Stroke)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Path x:Name="path"
                              Data="M0.7,0 L5,4.3 L9.3,0 L10,0.7 L5.7,5 L10,9.3 L9.3,10 L5,5.7 L0.7,10 L0,9.3 L4.3,5 L0,0.7 z"
                              Fill="{DynamicResource MahApps.Brushes.ThemeForeground}"
                              StrokeEndLineCap="Round"
                              StrokeStartLineCap="Round" />

                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <!--  Command="controls:FilterCommand.Clear"  -->
        <Setter Property="Command" Value="{x:Static controls:FilterCommand.Clear}" />
        <!--  ToolTip="Clear filter"  -->
        <Setter Property="ToolTip" Value="Clear filter" />
    </Style>
    <!--  String Value Filter  -->
    <Style TargetType="{x:Type vw:StringFilterView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vw:StringFilterView}">
                    <Border Height="Auto"
							Margin="{TemplateBinding Margin}"
							HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							VerticalAlignment="{TemplateBinding VerticalAlignment}"
							Style="{StaticResource BorderStyle}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock x:Name="PART_Name"
									Grid.Column="0"
									Style="{StaticResource FilterNameStyle}" />

                            <TextBlock Grid.Row="1"
									Margin="1"
									HorizontalAlignment="Right"
									Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
									Text="Search Type:"
									TextWrapping="NoWrap" />

                            <TextBlock Grid.Row="2"
									Margin="1"
									HorizontalAlignment="Right"
									Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
									Text="Find:"
									TextWrapping="Wrap" />

                            <TextBox x:Name="PART_Input"
									Grid.Row="2"
									Grid.Column="1"
									Grid.ColumnSpan="2"
									Margin="1"
									Padding="1,1,1,1"
									Background="Transparent"
									BorderBrush="{DynamicResource MahApps.Brushes.ThemeForeground}"
									Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
									Text="{Binding Model.Value, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
									TextWrapping="NoWrap" />

                            <ComboBox x:Name="PART_FilterType"
									Grid.Row="1"
									Grid.Column="1"
									Grid.ColumnSpan="2"
									Margin="2"
									HorizontalAlignment="Stretch"
									Padding="1,1,1,1"
									SelectedValue="{Binding Model.Mode, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Button Grid.Column="2" Style="{StaticResource FilterClearButtonStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Filters View  -->
    <Style TargetType="{x:Type vw:RangeFilterView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vw:RangeFilterView}">
                    <Border Height="Auto"
                            Margin="{TemplateBinding Margin}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Style="{StaticResource BorderStyle}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock x:Name="PART_Name"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Style="{StaticResource FilterNameStyle}" />

                            <TextBlock Grid.Row="1"
                                       Margin="1,1,1,1"
                                       HorizontalAlignment="Left"
                                       Padding="1,1,1,1"
                                       Text="From:"
                                       TextAlignment="Left"
                                       TextWrapping="NoWrap" />

                            <TextBox x:Name="PART_From"
                                     Grid.Row="1"
                                     Grid.Column="1"
                                     Grid.ColumnSpan="2"
                                     Margin="1,1,1,1"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     Padding="1,1,1,1"
                                     Text="{Binding Model.CompareFrom,
                                                    Converter={StaticResource SimplePropertyConverter},
                                                    UpdateSourceTrigger=Explicit,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                     TextWrapping="NoWrap" />

                            <TextBlock Grid.Row="2"
                                       Grid.Column="0"
                                       Margin="1,1,1,1"
                                       Padding="1,1,1,1"
                                       Text="To :"
                                       TextWrapping="Wrap" />

                            <TextBox x:Name="PART_To"
                                     Grid.Row="2"
                                     Grid.Column="1"
                                     Grid.ColumnSpan="2"
                                     Margin="1,1,1,1"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     Padding="1,1,1,1"
                                     Text="{Binding Model.CompareTo,
                                                    Converter={StaticResource SimplePropertyConverter},
                                                    UpdateSourceTrigger=Explicit,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                     TextWrapping="NoWrap" />
                            <Button Grid.Column="2" Style="{StaticResource FilterClearButtonStyle}" />

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Compare Value Filter  -->
    <Style TargetType="{x:Type vw:ComparableFilterView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vw:ComparableFilterView}">
                    <Border Height="Auto"
                            Margin="{TemplateBinding Margin}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Style="{StaticResource BorderStyle}">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock x:Name="PART_Name"
                                       Grid.Column="0"
                                       Style="{StaticResource FilterNameStyle}"
                                       Text="{Binding Model.Name,
                                                      Mode=OneWay,
                                                      RelativeSource={RelativeSource TemplatedParent}}" />

                            <TextBox x:Name="PART_Input"
                                     Grid.Row="1"
                                     Grid.Column="0"
                                     Grid.ColumnSpan="2"
                                     Margin="2"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     Padding="1,1,1,1"
                                     Text="{Binding Model.CompareTo,
                                                    UpdateSourceTrigger=Explicit,
                                                    Converter={StaticResource SimplePropertyConverter},
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                     TextWrapping="NoWrap" />
                            <Button Grid.Column="1" Style="{StaticResource FilterClearButtonStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="baseCheckBox" TargetType="{x:Type CheckBox}" BasedOn="{x:Null}"/>

    <Style x:Key="MultivalueFilterItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" />
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" />
        <Setter Property="Padding" Value="2,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <CheckBox x:Name="Bd"
                              Background="{x:Null}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
                              Style="{StaticResource baseCheckBox}"
                              IsChecked="{Binding IsSelected,
                                                  Mode=TwoWay,
                                                  RelativeSource={RelativeSource TemplatedParent}}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          ContentStringFormat="G"
                                          RecognizesAccessKey="True"  
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </CheckBox>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />

                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="MultiValueFilterViewTemplate" TargetType="{x:Type vw:MultiValueFilterView}">
        <Border MaxHeight="150"
                Margin="{TemplateBinding Margin}"
                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                Style="{StaticResource BorderStyle}"
                d:DesignHeight="150"
                d:DesignWidth="250">
            <Grid ScrollViewer.HorizontalScrollBarVisibility="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ListBox x:Name="PART_Items"
                         Grid.Row="1"
                         Grid.ColumnSpan="2"
                         Width="Auto"
                         Height="Auto"
                         BorderBrush="{x:Null}" 
                         Background="Transparent"
                         ItemContainerStyle="{StaticResource MultivalueFilterItemStyle}"
                         ItemsSource="{Binding Model.AvailableValues, RelativeSource={RelativeSource TemplatedParent}}"
                         SelectedValuePath="{x:Null}"
                         SelectionMode="Multiple"
                         SnapsToDevicePixels="False"
                         VirtualizingStackPanel.VirtualizationMode="Recycling"/>

                <TextBlock x:Name="PART_Name"
                           Grid.Row="0"
                           Grid.Column="0"
                           Style="{StaticResource FilterNameStyle}"
                           Text="{Binding Model.Name, RelativeSource={RelativeSource TemplatedParent}}" />
                <Button Grid.Column="1" Style="{StaticResource FilterClearButtonStyle}" />
            </Grid>
        </Border>
    </ControlTemplate>

    <!--  Multi Value Filter  -->
    <Style TargetType="{x:Type vw:MultiValueFilterView}">
        <Setter Property="Template" Value="{StaticResource MultiValueFilterViewTemplate}" />
    </Style>

    <!--  Enum Value Filter  -->
    <Style TargetType="{x:Type vw:EnumFilterView}">
        <Setter Property="Template" Value="{StaticResource MultiValueFilterViewTemplate}" />
    </Style>

    <!-- DateTime Range Filters View  -->
    <Style TargetType="{x:Type vw:DateTimeRangeFilterView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vw:DateTimeRangeFilterView}">
                    <Border Height="Auto"
                            Margin="{TemplateBinding Margin}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Style="{StaticResource BorderStyle}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="1"
                                       Margin="1,1,1,1"
                                       HorizontalAlignment="Left"
                                               Foreground="Black"
                                       Padding="1,1,1,1"
                                       TextAlignment="Left">
                                        <Run>终止时间:</Run>
                                        <Run Text="{Binding Model.MaxDateTime,RelativeSource={RelativeSource TemplatedParent}, StringFormat=yyyy/MM/dd HH:mm:ss}"/>
                            </TextBlock>

                            <controls:Range_Slider HorizontalAlignment="Left" Orientation="Vertical"  Grid.Row="2" Grid.Column="2" Height="150"  AutoToolTipTextConverter="{StaticResource DateTimeDoubleConverter}"
                                                         Minimum="{Binding Model.MinDateTime, Converter={StaticResource DateTimeDoubleConverter}, RelativeSource={RelativeSource TemplatedParent}}" 
                                                         Maximum="{Binding Model.MaxDateTime, Converter={StaticResource DateTimeDoubleConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                                         LowerValue="{Binding Model.CompareFrom, Converter={StaticResource DateTimeDoubleConverter}, RelativeSource={RelativeSource TemplatedParent}, Delay=300}"
                                                         UpperValue="{Binding Model.CompareTo, Converter={StaticResource DateTimeDoubleConverter}, RelativeSource={RelativeSource TemplatedParent}, Delay=300}" 
                                                         Style="{StaticResource AIStudio.Styles.Range_Slider}"/>

                            <TextBlock Grid.Row="3" Grid.Column="0" Margin="1,1,1,1" Padding="1,1,1,1" Foreground="Black" >
                                        <Run>起始时间:</Run>
                                        <Run Text="{Binding Model.MinDateTime,RelativeSource={RelativeSource TemplatedParent},StringFormat=yyyy/MM/dd HH:mm:ss}"/>
                            </TextBlock>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="FilterControlTemplate" TargetType="{x:Type controls:FilterControl}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="True"
                d:DesignHeight="89">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ItemsPresenter Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type controls:FilterControl}">
        <Setter Property="Template" Value="{StaticResource FilterControlTemplate}" />
    </Style>

    <Style x:Key="AIStudio.Styles.ColumnFilter" TargetType="{x:Type controls:ColumnFilter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ColumnFilter}">
                    <Grid Width="Auto"
							Height="{TemplateBinding Height}"
							Margin="{TemplateBinding Margin}"
							Visibility="{TemplateBinding Model, Converter={StaticResource FilterControlVmToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FilterState">
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonActive}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Open">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonOpen}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disable" />
                                <VisualState x:Name="Enable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonEnable}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonMouseOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OpenActive">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonActive}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Button x:Name="button"
								Command="controls:FilterCommand.Show"
								Padding="2"
                                Width="20" Height="20"
								Style="{StaticResource ColumnHeaderButtonStyle}">
                            <Rectangle x:Name="Icon" Fill="{StaticResource FilterButtonEnable}" Width="20" Height="20"/>
                        </Button>
                        <Popup x:Name="PART_FilterView"
								Grid.Row="1"
                                AllowsTransparency="True"
								Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridColumnHeader}}}"
								MinWidth="180"
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
								IsOpen="{Binding Model.IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
								Placement="Bottom"
								PopupAnimation="Scroll"
								StaysOpen="False">
                            <Border Background="{DynamicResource MahApps.Brushes.ComboBox.PopupBorder}">
                                <Grid>
                                    <ItemsPresenter
											Margin="{TemplateBinding Padding}"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray5}" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="Height" Value="6" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Margin="{TemplateBinding Padding}"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding Background}"
                            BorderThickness="0 0 0 1"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ValidationErrorStyle">
        <Grid Margin="2 0 2 0"
              VerticalAlignment="Center"
              DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors).CurrentItem}"
              ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.ErrorContent}">
            <Path Width="20"
                  Height="20"
                  Data="m 31.630585,39.233818 24.6309,-24.6308 c 0.6183,-0.6184 1.6208,-0.6184 2.2392,0 l 24.6308,24.6308 c 0.6184,0.6184 0.6184,1.6209 0,2.2392 l -24.6308,24.6309 c -0.6183,0.6183 -1.6209,0.6183 -2.2392,0 l -24.6309,-24.6309 c -0.6183,-0.6183 -0.6183,-1.6208 0,-2.2392 z"
                  Fill="{DynamicResource MahApps.Brushes.Control.Validation}"
                  Stretch="Uniform" />
            <Path Width="10"
                  Height="10"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="m 53.781741,31.196677 c -2.237724,0 -4.0625,1.824776 -4.0625,4.0625 0,2.237724 1.824776,4.0625 4.0625,4.0625 2.237724,0 4.0625,-1.824776 4.0625,-4.0625 0,-2.237724 -1.824776,-4.0625 -4.0625,-4.0625 z m -4.09375,-21.375 0.03125,0.53125 1.21875,19.46875 5.6875,0 1.25,-20 -8.1875,0 z"
                  Fill="{DynamicResource MahApps.Brushes.Text.Validation}"
                  Stretch="Uniform" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="AIStudio.Styles.DataGridColumnHeader.Filter" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray5}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundBorder"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <ContentPresenter x:Name="HeaderContent"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								Margin="{TemplateBinding Padding}"	
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <controls:ColumnFilter x:Name="ColumnFilter" Background="Transparent"
                                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   BorderThickness="0" BorderBrush="Transparent"
                                                   ParentCollection="{Binding ItemsSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"
                                                   Style="{StaticResource AIStudio.Styles.ColumnFilter}"/>

                        </StackPanel>
                        <Path x:Name="SortArrow"
                              Grid.Column="1"
                              Width="8"
                              Height="10"
                              Margin="0 0 8 2"
                              VerticalAlignment="Center"
                              Fill="{DynamicResource MahApps.Brushes.Gray2}"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Fill"
                              Visibility="Collapsed" />

                        <Thumb x:Name="PART_LeftHeaderGripper"
                               HorizontalAlignment="Left"
                               Background="Transparent"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />

                        <Thumb x:Name="PART_RightHeaderGripper"
                               Grid.Column="1"
                               HorizontalAlignment="Right"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        </Trigger>

                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Data" Value="F1 M 34,57L 42,57L 42,32.25L 52,42.25L 52,31.75L 38,17.75L 24,31.75L 24,42.25L 34,32.25L 34,57 Z " />
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Data" Value="F1 M 42,19.0002L 34,19.0002L 34,43.7502L 24,33.7502L 24,44.2502L 38,58.2502L 52,44.2502L 52,33.7502L 42,43.7502L 42,19.0002 Z " />
                            <Setter TargetName="SortArrow" Property="Margin" Value="0 0 8 0" />
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter TargetName="PART_LeftHeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AIStudio.Styles.DataGridRow.Filter" TargetType="{x:Type DataGridRow}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <SelectiveScrollingGrid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <DataGridCellsPresenter Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <DataGridDetailsPresenter Grid.Row="1"
                                                      Grid.Column="1"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, FallbackValue={x:Static SelectiveScrollingOrientation.Both}, TargetNullValue={x:Static SelectiveScrollingOrientation.Both}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                                                      Visibility="{TemplateBinding DetailsVisibility}" />

                            <DataGridRowHeader Grid.Row="0"
                                               Grid.RowSpan="2"
                                               Grid.Column="0"
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, FallbackValue={x:Static Visibility.Visible}, TargetNullValue={x:Static Visibility.Visible}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}" />
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate" Value="{StaticResource ValidationErrorStyle}" />
        <Style.Triggers>
            <Trigger Property="IsNewItem" Value="True">
                <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NewItemMargin}" />
            </Trigger>

            <!--  IsSelected  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text}" />
            </MultiTrigger>

            <!--  IsSelected and Selector.IsSelectionActive  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background.Inactive}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.Inactive}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.Inactive}" />
            </MultiTrigger>

            <!--  IsMouseOver  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background.MouseOver}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.MouseOver}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.MouseOver}" />
            </MultiTrigger>

            <!--  IsEnabled  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </MultiTrigger>

            <!--  IsEnabled and IsSelected  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background.Disabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.Disabled}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.Disabled}" />
            </MultiTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.DataGridCell.Filter" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="1,0,1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <!--  IsSelected  -->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush}" />
            </MultiTrigger>

            <!--  IsKeyboardFocusWithin  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.Focus}" />
            </MultiTrigger>

            <!--  IsSelected and Selector.IsSelectionActive  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.Inactive}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background.Inactive}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.Inactive}" />
            </MultiTrigger>

            <!--  IsMouseOver  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.MouseOver}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background.MouseOver}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.MouseOver}" />
            </MultiTrigger>

            <!--  IsEnabled  -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>

            <!--  IsEnabled and IsSelected  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.Disabled}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background.Disabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.Disabled}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background.Disabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.Disabled}" />
            </MultiTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="AIStudio.Styles.DataGridRowHeader.Filter" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray5}" />
        <Setter Property="BorderThickness" Value="0 0 1 0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Border Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Control Grid.Column="1"
                                         Focusable="False"
                                         SnapsToDevicePixels="False"
                                         Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                         Visibility="{Binding (Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
                            </Grid>
                        </Border>
                        <Thumb x:Name="PART_TopHeaderGripper"
                               VerticalAlignment="Top"
                               Background="Transparent"
                               Style="{StaticResource RowHeaderGripperStyle}" />
                        <Thumb x:Name="PART_BottomHeaderGripper"
                               VerticalAlignment="Bottom"
                               Style="{StaticResource RowHeaderGripperStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridSelectAllButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Border" Fill="{DynamicResource MahApps.Brushes.ThemeBackground}" SnapsToDevicePixels="True"/>
                        <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AIStudio.Styles.FilterDataGrid" TargetType="{x:Type controls:FilterDataGrid}">
        <Style.Resources>
            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource AIStudio.Styles.DataGridColumnHeader.Filter}" />
            <Style TargetType="{x:Type DataGridRowHeader}" BasedOn="{StaticResource AIStudio.Styles.DataGridRowHeader.Filter}" />
            <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource AIStudio.Styles.DataGridRow.Filter}" />
            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource AIStudio.Styles.DataGridCell.Filter}" />
        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CellStyle" Value="{StaticResource AIStudio.Styles.DataGridCell.Filter}" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource AIStudio.Styles.DataGridColumnHeader.Filter}" />
        <Setter Property="DropLocationIndicatorStyle">
            <Setter.Value>
                <Style TargetType="Separator">
                    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Separator">
                                <Rectangle Width="{TemplateBinding Width}"
                                           Height="{TemplateBinding Height}"
                                           Fill="{TemplateBinding Background}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Width" Value="2" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="GridLinesVisibility" Value="All" />
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource MahApps.Brushes.Gray7}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource MahApps.Brushes.Gray7}" />
        <Setter Property="MinRowHeight" Value="25" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource AIStudio.Styles.DataGridRowHeader.Filter}"/>
        <Setter Property="RowStyle" Value="{StaticResource AIStudio.Styles.DataGridRow.Filter}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Button Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=CellsPanelHorizontalOffset}"
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                Style="{StaticResource DataGridSelectAllButtonStyle}"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                     Path=HeadersVisibility,
                                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                     ConverterParameter={x:Static DataGridHeadersVisibility.All}}" />
                                        <DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                                             Path=HeadersVisibility,
                                                                                             Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                                             ConverterParameter={x:Static DataGridHeadersVisibility.Column}}" />

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                Grid.Row="1"
                                                                Grid.ColumnSpan="2"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <ScrollBar Name="PART_VerticalScrollBar"
                                                   Grid.Row="1"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding Path=VerticalOffset,
                                                                   RelativeSource={RelativeSource TemplatedParent},
                                                                   Mode=OneWay}" />

                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding Path=HorizontalOffset,
                                                                       RelativeSource={RelativeSource TemplatedParent},
                                                                       Mode=OneWay}" />

                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource MahApps.Brushes.Gray10}" />
        <Setter Property="BorderBrush"
                            Value="{DynamicResource MahApps.Brushes.Gray5}" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource AIStudio.Styles.FilterDataGrid}" TargetType="{x:Type controls:FilterDataGrid}"/>

</ResourceDictionary>